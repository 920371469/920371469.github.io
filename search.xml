<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Django+滑动验证码</title>
      <link href="/2019/02/22/django-hua-dong-yan-zheng-ma/"/>
      <url>/2019/02/22/django-hua-dong-yan-zheng-ma/</url>
      
        <content type="html"><![CDATA[<h2 id="Django中使用滑动验证码"><a href="#Django中使用滑动验证码" class="headerlink" title="Django中使用滑动验证码"></a>Django中使用滑动验证码</h2><h3 id="1-1-注册账号"><a href="#1-1-注册账号" class="headerlink" title="1.1 注册账号"></a>1.1 注册账号</h3><p>极验官方: <a href="https://www.geetest.com/" target="_blank" rel="noopener">https://www.geetest.com/</a></p><p>注册好后去申请key和value</p><h3 id="1-2下载SDK"><a href="#1-2下载SDK" class="headerlink" title="1.2下载SDK"></a>1.2下载SDK</h3><p>从Github: gt3-python-sdk下载.zip文件</p><p>这是python的, 当然也有其他语言的~~</p><p>知道你们懒, 还是贴上来吧: <a href="https://docs.geetest.com/install/deploy/server/csharp" target="_blank" rel="noopener">https://docs.geetest.com/install/deploy/server/csharp</a></p><h3 id="1-3-运行项目"><a href="#1-3-运行项目" class="headerlink" title="1.3 运行项目"></a>1.3 运行项目</h3>]]></content>
      
      
      <categories>
          
          <category> Django </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Django </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PyMySQL优化与封装</title>
      <link href="/2019/02/21/pymysql-you-hua-yu-feng-zhuang/"/>
      <url>/2019/02/21/pymysql-you-hua-yu-feng-zhuang/</url>
      
        <content type="html"><![CDATA[<h2 id="PyMySQL优化与封装"><a href="#PyMySQL优化与封装" class="headerlink" title="PyMySQL优化与封装"></a>PyMySQL优化与封装</h2><p>我们之前使用pymysql操作数据库的操作都是写死在视图函数中的，并且很多都是重复的代码。<br>我们可以优化一下，把重复的代码提取出来，写成函数：</p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> pymysql<span class="token comment" spellcheck="true"># 定义一个数据库相关的配置项</span>DB_CONFIG <span class="token operator">=</span> <span class="token punctuation">{</span>    <span class="token string">"host"</span><span class="token punctuation">:</span> <span class="token string">"127.0.0.1"</span><span class="token punctuation">,</span>    <span class="token string">"port"</span><span class="token punctuation">:</span> <span class="token number">3306</span><span class="token punctuation">,</span>    <span class="token string">"user"</span><span class="token punctuation">:</span> <span class="token string">"root"</span><span class="token punctuation">,</span>    <span class="token string">"passwd"</span><span class="token punctuation">:</span> <span class="token string">"root1234"</span><span class="token punctuation">,</span>    <span class="token string">"db"</span><span class="token punctuation">:</span> <span class="token string">"mysite"</span><span class="token punctuation">,</span>    <span class="token string">"charset"</span><span class="token punctuation">:</span> <span class="token string">"utf8"</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true"># 查询多条数据函数</span><span class="token keyword">def</span> <span class="token function">get_list</span><span class="token punctuation">(</span>sql<span class="token punctuation">,</span> args<span class="token operator">=</span>None<span class="token punctuation">)</span><span class="token punctuation">:</span>    conn <span class="token operator">=</span> pymysql<span class="token punctuation">.</span>connect<span class="token punctuation">(</span>        host<span class="token operator">=</span>DB_CONFIG<span class="token punctuation">[</span><span class="token string">"host"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        port<span class="token operator">=</span>DB_CONFIG<span class="token punctuation">[</span><span class="token string">"port"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        user<span class="token operator">=</span>DB_CONFIG<span class="token punctuation">[</span><span class="token string">"user"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        passwd<span class="token operator">=</span>DB_CONFIG<span class="token punctuation">[</span><span class="token string">"passwd"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        db<span class="token operator">=</span>DB_CONFIG<span class="token punctuation">[</span><span class="token string">"db"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        charset<span class="token operator">=</span>DB_CONFIG<span class="token punctuation">[</span><span class="token string">"charset"</span><span class="token punctuation">]</span>    <span class="token punctuation">)</span>    cursor <span class="token operator">=</span> conn<span class="token punctuation">.</span>cursor<span class="token punctuation">(</span>cursor<span class="token operator">=</span>pymysql<span class="token punctuation">.</span>cursors<span class="token punctuation">.</span>DictCursor<span class="token punctuation">)</span>    cursor<span class="token punctuation">.</span>execute<span class="token punctuation">(</span>sql<span class="token punctuation">,</span> args<span class="token punctuation">)</span>    result <span class="token operator">=</span> cursor<span class="token punctuation">.</span>fetchall<span class="token punctuation">(</span><span class="token punctuation">)</span>    cursor<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>    conn<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> result<span class="token comment" spellcheck="true"># 查询单挑数据函数</span><span class="token keyword">def</span> <span class="token function">get_one</span><span class="token punctuation">(</span>sql<span class="token punctuation">,</span> args<span class="token operator">=</span>None<span class="token punctuation">)</span><span class="token punctuation">:</span>    conn <span class="token operator">=</span> pymysql<span class="token punctuation">.</span>connect<span class="token punctuation">(</span>        host<span class="token operator">=</span>DB_CONFIG<span class="token punctuation">[</span><span class="token string">"host"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        port<span class="token operator">=</span>DB_CONFIG<span class="token punctuation">[</span><span class="token string">"port"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        user<span class="token operator">=</span>DB_CONFIG<span class="token punctuation">[</span><span class="token string">"user"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        passwd<span class="token operator">=</span>DB_CONFIG<span class="token punctuation">[</span><span class="token string">"passwd"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        db<span class="token operator">=</span>DB_CONFIG<span class="token punctuation">[</span><span class="token string">"db"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        charset<span class="token operator">=</span>DB_CONFIG<span class="token punctuation">[</span><span class="token string">"charset"</span><span class="token punctuation">]</span>    <span class="token punctuation">)</span>    cursor <span class="token operator">=</span> conn<span class="token punctuation">.</span>cursor<span class="token punctuation">(</span>cursor<span class="token operator">=</span>pymysql<span class="token punctuation">.</span>cursors<span class="token punctuation">.</span>DictCursor<span class="token punctuation">)</span>    cursor<span class="token punctuation">.</span>execute<span class="token punctuation">(</span>sql<span class="token punctuation">,</span> args<span class="token punctuation">)</span>    result <span class="token operator">=</span> cursor<span class="token punctuation">.</span>fetchone<span class="token punctuation">(</span><span class="token punctuation">)</span>    cursor<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>    conn<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> result<span class="token comment" spellcheck="true"># 修改记录</span><span class="token keyword">def</span> <span class="token function">modify</span><span class="token punctuation">(</span>sql<span class="token punctuation">,</span> args<span class="token operator">=</span>None<span class="token punctuation">)</span><span class="token punctuation">:</span>    conn <span class="token operator">=</span> pymysql<span class="token punctuation">.</span>connect<span class="token punctuation">(</span>        host<span class="token operator">=</span>DB_CONFIG<span class="token punctuation">[</span><span class="token string">"host"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        port<span class="token operator">=</span>DB_CONFIG<span class="token punctuation">[</span><span class="token string">"port"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        user<span class="token operator">=</span>DB_CONFIG<span class="token punctuation">[</span><span class="token string">"user"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        passwd<span class="token operator">=</span>DB_CONFIG<span class="token punctuation">[</span><span class="token string">"passwd"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        db<span class="token operator">=</span>DB_CONFIG<span class="token punctuation">[</span><span class="token string">"db"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        charset<span class="token operator">=</span>DB_CONFIG<span class="token punctuation">[</span><span class="token string">"charset"</span><span class="token punctuation">]</span>    <span class="token punctuation">)</span>    cursor <span class="token operator">=</span> conn<span class="token punctuation">.</span>cursor<span class="token punctuation">(</span>cursor<span class="token operator">=</span>pymysql<span class="token punctuation">.</span>cursors<span class="token punctuation">.</span>DictCursor<span class="token punctuation">)</span>    cursor<span class="token punctuation">.</span>execute<span class="token punctuation">(</span>sql<span class="token punctuation">,</span> args<span class="token punctuation">)</span>    conn<span class="token punctuation">.</span>commit<span class="token punctuation">(</span><span class="token punctuation">)</span>    cursor<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>    conn<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 创建记录</span><span class="token keyword">def</span> <span class="token function">create</span><span class="token punctuation">(</span>sql<span class="token punctuation">,</span> args<span class="token operator">=</span>None<span class="token punctuation">)</span><span class="token punctuation">:</span>    conn <span class="token operator">=</span> pymysql<span class="token punctuation">.</span>connect<span class="token punctuation">(</span>        host<span class="token operator">=</span>DB_CONFIG<span class="token punctuation">[</span><span class="token string">"host"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        port<span class="token operator">=</span>DB_CONFIG<span class="token punctuation">[</span><span class="token string">"port"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        user<span class="token operator">=</span>DB_CONFIG<span class="token punctuation">[</span><span class="token string">"user"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        passwd<span class="token operator">=</span>DB_CONFIG<span class="token punctuation">[</span><span class="token string">"passwd"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        db<span class="token operator">=</span>DB_CONFIG<span class="token punctuation">[</span><span class="token string">"db"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        charset<span class="token operator">=</span>DB_CONFIG<span class="token punctuation">[</span><span class="token string">"charset"</span><span class="token punctuation">]</span>    <span class="token punctuation">)</span>    cursor <span class="token operator">=</span> conn<span class="token punctuation">.</span>cursor<span class="token punctuation">(</span>cursor<span class="token operator">=</span>pymysql<span class="token punctuation">.</span>cursors<span class="token punctuation">.</span>DictCursor<span class="token punctuation">)</span>    cursor<span class="token punctuation">.</span>execute<span class="token punctuation">(</span>sql<span class="token punctuation">,</span> args<span class="token punctuation">)</span>    conn<span class="token punctuation">.</span>commit<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 返回刚才创建的那条数据的ID</span>    last_id <span class="token operator">=</span> cursor<span class="token punctuation">.</span>lastrowid    cursor<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>    conn<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> last_id</code></pre><p>这样只要在需要连接数据库做操作的时候，只需要调用我们上面定义好的函数就可以了。</p><p><strong>但是</strong>这样还是有问题，当我要大批量创建数据的时候，就需要多次调用create方法了，相当于多次连接多次提交。</p><p>可以继续优化下，把数据库的连接重用，做到只需一次连接就可执行多次操作。</p><pre class=" language-python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">SQLManager</span><span class="token punctuation">(</span>object<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment" spellcheck="true"># 初始化实例方法</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>conn <span class="token operator">=</span> None        self<span class="token punctuation">.</span>cursor <span class="token operator">=</span> None        self<span class="token punctuation">.</span>connect<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 连接数据库</span>    <span class="token keyword">def</span> <span class="token function">connect</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>conn <span class="token operator">=</span> pymysql<span class="token punctuation">.</span>connect<span class="token punctuation">(</span>            host<span class="token operator">=</span>DB_CONFIG<span class="token punctuation">[</span><span class="token string">"host"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>            port<span class="token operator">=</span>DB_CONFIG<span class="token punctuation">[</span><span class="token string">"port"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>            user<span class="token operator">=</span>DB_CONFIG<span class="token punctuation">[</span><span class="token string">"user"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>            passwd<span class="token operator">=</span>DB_CONFIG<span class="token punctuation">[</span><span class="token string">"passwd"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>            db<span class="token operator">=</span>DB_CONFIG<span class="token punctuation">[</span><span class="token string">"db"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>            charset<span class="token operator">=</span>DB_CONFIG<span class="token punctuation">[</span><span class="token string">"charset"</span><span class="token punctuation">]</span>        <span class="token punctuation">)</span>        self<span class="token punctuation">.</span>cursor <span class="token operator">=</span> self<span class="token punctuation">.</span>conn<span class="token punctuation">.</span>cursor<span class="token punctuation">(</span>cursor<span class="token operator">=</span>pymysql<span class="token punctuation">.</span>cursors<span class="token punctuation">.</span>DictCursor<span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 查询多条数据</span>    <span class="token keyword">def</span> <span class="token function">get_list</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> sql<span class="token punctuation">,</span> args<span class="token operator">=</span>None<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>cursor<span class="token punctuation">.</span>execute<span class="token punctuation">(</span>sql<span class="token punctuation">,</span> args<span class="token punctuation">)</span>        result <span class="token operator">=</span> self<span class="token punctuation">.</span>cursor<span class="token punctuation">.</span>fetchall<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> result    <span class="token comment" spellcheck="true"># 查询单条数据</span>    <span class="token keyword">def</span> <span class="token function">get_one</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> sql<span class="token punctuation">,</span> args<span class="token operator">=</span>None<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>cursor<span class="token punctuation">.</span>execute<span class="token punctuation">(</span>sql<span class="token punctuation">,</span> args<span class="token punctuation">)</span>        result <span class="token operator">=</span> self<span class="token punctuation">.</span>cursor<span class="token punctuation">.</span>fetchone<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> result    <span class="token comment" spellcheck="true"># 执行单条SQL语句</span>    <span class="token keyword">def</span> <span class="token function">moddify</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> sql<span class="token punctuation">,</span> args<span class="token operator">=</span>None<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>cursor<span class="token punctuation">.</span>execute<span class="token punctuation">(</span>sql<span class="token punctuation">,</span> args<span class="token punctuation">)</span>        self<span class="token punctuation">.</span>conn<span class="token punctuation">.</span>commit<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 创建单条记录的语句</span>    <span class="token keyword">def</span> <span class="token function">create</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> sql<span class="token punctuation">,</span> args<span class="token operator">=</span>None<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>cursor<span class="token punctuation">.</span>execute<span class="token punctuation">(</span>sql<span class="token punctuation">,</span> args<span class="token punctuation">)</span>        self<span class="token punctuation">.</span>conn<span class="token punctuation">.</span>commit<span class="token punctuation">(</span><span class="token punctuation">)</span>        last_id <span class="token operator">=</span> self<span class="token punctuation">.</span>cursor<span class="token punctuation">.</span>lastrowid        <span class="token keyword">return</span> last_id    <span class="token comment" spellcheck="true"># 关闭数据库cursor和连接</span>    <span class="token keyword">def</span> <span class="token function">close</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>cursor<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>conn<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><p>我们把我们数据库的相关操作都封装成一个类，在用到的时候，只需要生成一个实例，并对实例调用相应的操作方法就可以了</p><pre class=" language-python"><code class="language-python">db <span class="token operator">=</span> SQLManager<span class="token punctuation">(</span><span class="token punctuation">)</span>class_list <span class="token operator">=</span> db<span class="token punctuation">.</span>get_list<span class="token punctuation">(</span><span class="token string">"select id, name from class"</span><span class="token punctuation">)</span>teacher_info <span class="token operator">=</span> db<span class="token punctuation">.</span>get_list<span class="token punctuation">(</span><span class="token string">"SELECT teacher.id, teacher.name, teacher2class.class_id FROM teacher  LEFT JOIN teacher2class ON teacher.id = teacher2class.teacher_id WHERE teacher.id=%s;"</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>teacher_id<span class="token punctuation">]</span><span class="token punctuation">)</span>db<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><p>但是，我如果要批量执行多个创建操作，虽然只建立了一次数据库连接但是还是会多次提交，可不可以改成一次连接，一次提交呢？</p><p>可以，只需要用上pymysql的executemany()方法就可以了。</p><p>给我们的 SQLManager类添加一个批量执行的 multi_modify()方法就可以了。</p><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 执行多条SQL语句</span><span class="token keyword">def</span> <span class="token function">multi_modify</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> sql<span class="token punctuation">,</span> args<span class="token operator">=</span>None<span class="token punctuation">)</span><span class="token punctuation">:</span>    self<span class="token punctuation">.</span>cursor<span class="token punctuation">.</span>executemany<span class="token punctuation">(</span>sql<span class="token punctuation">,</span> args<span class="token punctuation">)</span>    self<span class="token punctuation">.</span>conn<span class="token punctuation">.</span>commit<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><p>现在我们如果一次执行多个创建操作的话就可以使用multi_modify()方法，实现一次连接一次提交了。</p><p>最后，我们每次操作完数据库之后都要手动关闭，可不可以写成自动关闭的呢？</p><p>联想到我们之前学过的文件操作，使用with语句可以实现缩进结束自动关闭文件句柄的例子。</p><p>我们来把我们的数据库连接类SQLManager类再优化下，使其支持with语句操作。</p><pre class=" language-python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">SQLManager</span><span class="token punctuation">(</span>object<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment" spellcheck="true"># 初始化实例方法</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>conn <span class="token operator">=</span> None        self<span class="token punctuation">.</span>cursor <span class="token operator">=</span> None        self<span class="token punctuation">.</span>connect<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 连接数据库</span>    <span class="token keyword">def</span> <span class="token function">connect</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>conn <span class="token operator">=</span> pymysql<span class="token punctuation">.</span>connect<span class="token punctuation">(</span>            host<span class="token operator">=</span>DB_CONFIG<span class="token punctuation">[</span><span class="token string">"host"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>            port<span class="token operator">=</span>DB_CONFIG<span class="token punctuation">[</span><span class="token string">"port"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>            user<span class="token operator">=</span>DB_CONFIG<span class="token punctuation">[</span><span class="token string">"user"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>            passwd<span class="token operator">=</span>DB_CONFIG<span class="token punctuation">[</span><span class="token string">"passwd"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>            db<span class="token operator">=</span>DB_CONFIG<span class="token punctuation">[</span><span class="token string">"db"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>            charset<span class="token operator">=</span>DB_CONFIG<span class="token punctuation">[</span><span class="token string">"charset"</span><span class="token punctuation">]</span>        <span class="token punctuation">)</span>        self<span class="token punctuation">.</span>cursor <span class="token operator">=</span> self<span class="token punctuation">.</span>conn<span class="token punctuation">.</span>cursor<span class="token punctuation">(</span>cursor<span class="token operator">=</span>pymysql<span class="token punctuation">.</span>cursors<span class="token punctuation">.</span>DictCursor<span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 查询多条数据</span>    <span class="token keyword">def</span> <span class="token function">get_list</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> sql<span class="token punctuation">,</span> args<span class="token operator">=</span>None<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>cursor<span class="token punctuation">.</span>execute<span class="token punctuation">(</span>sql<span class="token punctuation">,</span> args<span class="token punctuation">)</span>        result <span class="token operator">=</span> self<span class="token punctuation">.</span>cursor<span class="token punctuation">.</span>fetchall<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> result    <span class="token comment" spellcheck="true"># 查询单条数据</span>    <span class="token keyword">def</span> <span class="token function">get_one</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> sql<span class="token punctuation">,</span> args<span class="token operator">=</span>None<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>cursor<span class="token punctuation">.</span>execute<span class="token punctuation">(</span>sql<span class="token punctuation">,</span> args<span class="token punctuation">)</span>        result <span class="token operator">=</span> self<span class="token punctuation">.</span>cursor<span class="token punctuation">.</span>fetchone<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> result    <span class="token comment" spellcheck="true"># 执行单条SQL语句</span>    <span class="token keyword">def</span> <span class="token function">moddify</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> sql<span class="token punctuation">,</span> args<span class="token operator">=</span>None<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>cursor<span class="token punctuation">.</span>execute<span class="token punctuation">(</span>sql<span class="token punctuation">,</span> args<span class="token punctuation">)</span>        self<span class="token punctuation">.</span>conn<span class="token punctuation">.</span>commit<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 执行多条SQL语句</span>    <span class="token keyword">def</span> <span class="token function">multi_modify</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> sql<span class="token punctuation">,</span> args<span class="token operator">=</span>None<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>cursor<span class="token punctuation">.</span>executemany<span class="token punctuation">(</span>sql<span class="token punctuation">,</span> args<span class="token punctuation">)</span>        self<span class="token punctuation">.</span>conn<span class="token punctuation">.</span>commit<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 创建单条记录的语句</span>    <span class="token keyword">def</span> <span class="token function">create</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> sql<span class="token punctuation">,</span> args<span class="token operator">=</span>None<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>cursor<span class="token punctuation">.</span>execute<span class="token punctuation">(</span>sql<span class="token punctuation">,</span> args<span class="token punctuation">)</span>        self<span class="token punctuation">.</span>conn<span class="token punctuation">.</span>commit<span class="token punctuation">(</span><span class="token punctuation">)</span>        last_id <span class="token operator">=</span> self<span class="token punctuation">.</span>cursor<span class="token punctuation">.</span>lastrowid        <span class="token keyword">return</span> last_id    <span class="token comment" spellcheck="true"># 关闭数据库cursor和连接</span>    <span class="token keyword">def</span> <span class="token function">close</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>cursor<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>conn<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 进入with语句自动执行</span>    <span class="token keyword">def</span> <span class="token function">__enter__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> self    <span class="token comment" spellcheck="true"># 退出with语句块自动执行</span>    <span class="token keyword">def</span> <span class="token function">__exit__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> exc_type<span class="token punctuation">,</span> exc_val<span class="token punctuation">,</span> exc_tb<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>调用支付宝SDK</title>
      <link href="/2019/02/19/diao-yong-zhi-fu-bao-sdk/"/>
      <url>/2019/02/19/diao-yong-zhi-fu-bao-sdk/</url>
      
        <content type="html"><![CDATA[<h2 id="支付宝支付"><a href="#支付宝支付" class="headerlink" title="支付宝支付"></a>支付宝支付</h2><h3 id="1-1-Alipay"><a href="#1-1-Alipay" class="headerlink" title="1.1 Alipay"></a>1.1 Alipay</h3><blockquote><p>阿里的支付也就是支付宝，官网以及出了Python的SDK了~所以要先下载~~</p></blockquote><pre class=" language-python"><code class="language-python">ip install alipay<span class="token operator">-</span>sdk<span class="token operator">-</span>python</code></pre><blockquote><p>支付宝沙箱环境的地址 <a href="https://openhome.alipay.com/platform/appDaily.htm?tab=info" target="_blank" rel="noopener">https://openhome.alipay.com/platform/appDaily.htm?tab=info</a></p></blockquote><p><strong>注意:</strong></p><p>如果安装alipay报</p><p>需要先下载一个安装环境:</p><pre class=" language-python"><code class="language-python">pip install alipay<span class="token operator">-</span>sdk<span class="token operator">-</span>python</code></pre><h3 id="1-2-具体操作"><a href="#1-2-具体操作" class="headerlink" title="1.2 具体操作"></a>1.2 具体操作</h3><h4 id="第一步-访问沙箱环境地址，注册一个商家账户"><a href="#第一步-访问沙箱环境地址，注册一个商家账户" class="headerlink" title="第一步 访问沙箱环境地址，注册一个商家账户"></a>第一步 访问沙箱环境地址，注册一个商家账户</h4><p><img src="https://img2018.cnblogs.com/blog/1349080/201812/1349080-20181215142418831-1543233779.png" alt="信息配置"></p><p>按照他要求的方式生成商户的公钥和私钥~把公钥放入网站~私钥自己留着签名用~~</p><p>下面是商户信息以及卖家信息~下载一个支付宝的沙箱环境~</p><p>然后按照下面的账号和密码登录和支付~~只支持安卓的~</p><p><img src="https://img2018.cnblogs.com/blog/1349080/201812/1349080-20181215142550000-1291772992.png" alt="信息"></p><h4 id="第二步-阅读文档-找到一个适合自己的API"><a href="#第二步-阅读文档-找到一个适合自己的API" class="headerlink" title="第二步 阅读文档 找到一个适合自己的API"></a>第二步 阅读文档 找到一个适合自己的API</h4><p><img src="https://img2018.cnblogs.com/blog/1349080/201812/1349080-20181215143623147-605743495.png" alt="API"></p><h4 id="第三步-代码实例"><a href="#第三步-代码实例" class="headerlink" title="第三步 代码实例"></a>第三步 代码实例</h4><pre class=" language-python"><code class="language-python"><span class="token keyword">from</span> django<span class="token punctuation">.</span>conf<span class="token punctuation">.</span>urls <span class="token keyword">import</span> url<span class="token keyword">from</span> django<span class="token punctuation">.</span>contrib <span class="token keyword">import</span> admin<span class="token keyword">from</span> demo<span class="token punctuation">.</span>views <span class="token keyword">import</span> AliPayView<span class="token punctuation">,</span> PayHandlerViewurlpatterns <span class="token operator">=</span> <span class="token punctuation">[</span>    url<span class="token punctuation">(</span>r<span class="token string">'^admin/'</span><span class="token punctuation">,</span> admin<span class="token punctuation">.</span>site<span class="token punctuation">.</span>urls<span class="token punctuation">)</span><span class="token punctuation">,</span>    url<span class="token punctuation">(</span>r<span class="token string">'^pay$'</span><span class="token punctuation">,</span> AliPayView<span class="token punctuation">.</span>as_view<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    url<span class="token punctuation">(</span>r<span class="token string">'^alipay_handler'</span><span class="token punctuation">,</span> PayHandlerView<span class="token punctuation">.</span>as_view<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">]</span></code></pre><pre class=" language-python"><code class="language-python"><span class="token keyword">from</span> django<span class="token punctuation">.</span>shortcuts <span class="token keyword">import</span> render<span class="token punctuation">,</span> redirect<span class="token keyword">from</span> django<span class="token punctuation">.</span>http <span class="token keyword">import</span> HttpResponse<span class="token keyword">from</span> rest_framework<span class="token punctuation">.</span>views <span class="token keyword">import</span> APIView<span class="token keyword">from</span> rest_framework<span class="token punctuation">.</span>response <span class="token keyword">import</span> Response<span class="token keyword">from</span> alipay<span class="token punctuation">.</span>aop<span class="token punctuation">.</span>api<span class="token punctuation">.</span>DefaultAlipayClient <span class="token keyword">import</span> DefaultAlipayClient<span class="token keyword">from</span> alipay<span class="token punctuation">.</span>aop<span class="token punctuation">.</span>api<span class="token punctuation">.</span>AlipayClientConfig <span class="token keyword">import</span> AlipayClientConfig<span class="token keyword">from</span> alipay<span class="token punctuation">.</span>aop<span class="token punctuation">.</span>api<span class="token punctuation">.</span>domain<span class="token punctuation">.</span>AlipayTradePrecreateModel <span class="token keyword">import</span> AlipayTradePrecreateModel<span class="token keyword">from</span> alipay<span class="token punctuation">.</span>aop<span class="token punctuation">.</span>api<span class="token punctuation">.</span>request<span class="token punctuation">.</span> AlipayTradePrecreateRequest <span class="token keyword">import</span> AlipayTradePrecreateRequest<span class="token keyword">from</span> alipay<span class="token punctuation">.</span>aop<span class="token punctuation">.</span>api<span class="token punctuation">.</span>domain<span class="token punctuation">.</span>AlipayTradePagePayModel <span class="token keyword">import</span> AlipayTradePagePayModel<span class="token keyword">from</span> alipay<span class="token punctuation">.</span>aop<span class="token punctuation">.</span>api<span class="token punctuation">.</span>request<span class="token punctuation">.</span>AlipayTradePagePayRequest <span class="token keyword">import</span> AlipayTradePagePayRequest<span class="token keyword">import</span> time<span class="token comment" spellcheck="true"># Create your views here.</span><span class="token comment" spellcheck="true"># 沙箱环境地址：https://openhome.alipay.com/platform/appDaily.htm?tab=info</span><span class="token comment" spellcheck="true"># "https://openapi.alipaydev.com/gateway.do", APP_ID, APP_PRIVATE_KEY, "json", CHARSET, ALIPAY_PUBLIC_KEY, "RSA2"</span><span class="token keyword">def</span> <span class="token function">ali_pay</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment" spellcheck="true"># 为阿里支付实例化一个配置信息对象</span>    alipay_config <span class="token operator">=</span> AlipayClientConfig<span class="token punctuation">(</span>sandbox_debug<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 初始化各种配置信息</span>    <span class="token comment" spellcheck="true"># 阿里提供服务的接口</span>    alipay_config<span class="token punctuation">.</span>server_url <span class="token operator">=</span> <span class="token string">"https://openapi.alipaydev.com/gateway.do"</span>    <span class="token comment" spellcheck="true"># 申请的沙箱环境的app_id</span>    alipay_config<span class="token punctuation">.</span>app_id <span class="token operator">=</span> <span class="token string">"2016091800540924"</span>    <span class="token comment" spellcheck="true"># 商户的私钥</span>    <span class="token keyword">with</span> open<span class="token punctuation">(</span><span class="token string">"keys/app_private_key.txt"</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>        alipay_config<span class="token punctuation">.</span>app_private_key <span class="token operator">=</span> f<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 阿里的公钥</span>    <span class="token keyword">with</span> open<span class="token punctuation">(</span><span class="token string">"keys/alipay_public_key.txt"</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>        alipay_config<span class="token punctuation">.</span>alipay_public_key <span class="token operator">=</span> f<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 实例化一个支付对象并返回</span>    alipay_client <span class="token operator">=</span> DefaultAlipayClient<span class="token punctuation">(</span>alipay_client_config<span class="token operator">=</span>alipay_config<span class="token punctuation">)</span>    <span class="token keyword">return</span> alipay_client<span class="token keyword">class</span> <span class="token class-name">AliPayView</span><span class="token punctuation">(</span>APIView<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">get</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> request<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> render<span class="token punctuation">(</span>request<span class="token punctuation">,</span> <span class="token string">"pay.html"</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 生成支付宝自带页面的API</span>    <span class="token keyword">def</span> <span class="token function">post</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> request<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token comment" spellcheck="true"># 得到阿里支付的实例化对象</span>        client <span class="token operator">=</span> ali_pay<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 为API生成一个模板对象 初始化参数用的</span>        model <span class="token operator">=</span> AlipayTradePagePayModel<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 订单号</span>        model<span class="token punctuation">.</span>out_trade_no <span class="token operator">=</span> <span class="token string">"pay"</span> <span class="token operator">+</span> str<span class="token punctuation">(</span>time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 金额</span>        model<span class="token punctuation">.</span>total_amount <span class="token operator">=</span> <span class="token number">8888</span>        <span class="token comment" spellcheck="true"># 商品标题</span>        model<span class="token punctuation">.</span>subject <span class="token operator">=</span> <span class="token string">"测试"</span>        <span class="token comment" spellcheck="true"># 商品详细内容</span>        model<span class="token punctuation">.</span>body <span class="token operator">=</span> <span class="token string">"支付宝测试"</span>        <span class="token comment" spellcheck="true"># 销售产品码，与支付宝签约的产品码名称</span>        model<span class="token punctuation">.</span>product_code <span class="token operator">=</span> <span class="token string">"FAST_INSTANT_TRADE_PAY"</span>        <span class="token comment" spellcheck="true"># 实例化一个请求对象</span>        request <span class="token operator">=</span> AlipayTradePagePayRequest<span class="token punctuation">(</span>biz_model<span class="token operator">=</span>model<span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># get请求 用户支付成功后返回的页面请求地址</span>        request<span class="token punctuation">.</span>return_url <span class="token operator">=</span> <span class="token string">"http://140.143.63.45:8000/alipay_handler"</span>        <span class="token comment" spellcheck="true"># post请求 用户支付成功通知商户的请求地址</span>        request<span class="token punctuation">.</span>notify_url <span class="token operator">=</span> <span class="token string">"http://140.143.63.45:8000/alipay_handler"</span>        <span class="token comment" spellcheck="true"># 利用阿里支付对象发一个获得页面的请求 参数是request</span>        response <span class="token operator">=</span> client<span class="token punctuation">.</span>page_execute<span class="token punctuation">(</span>request<span class="token punctuation">,</span> http_method<span class="token operator">=</span><span class="token string">"GET"</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> redirect<span class="token punctuation">(</span>response<span class="token punctuation">)</span><span class="token keyword">class</span> <span class="token class-name">PayHandlerView</span><span class="token punctuation">(</span>APIView<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">get</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> request<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token comment" spellcheck="true"># return_url的回调地址</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span>data<span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 用户支付成功之后回到哪</span>        <span class="token keyword">return</span> HttpResponse<span class="token punctuation">(</span><span class="token string">"return_url测试"</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">post</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> request<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span>data<span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 用户支付成功 在这里修改订单状态以及优惠券贝里等等情况</span>        <span class="token keyword">return</span> HttpResponse<span class="token punctuation">(</span><span class="token string">"notify_url"</span><span class="token punctuation">)</span>views<span class="token punctuation">.</span>py</code></pre><p><strong>注意:</strong> 我们的回调url的测试要放在公网IP上~所以测试的时候放入自己服务器</p>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> SDK </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据分析之NumPy</title>
      <link href="/2019/02/18/shu-ju-fen-xi-zhi-numpy/"/>
      <url>/2019/02/18/shu-ju-fen-xi-zhi-numpy/</url>
      
        <content type="html"><![CDATA[<h2 id="NumPy"><a href="#NumPy" class="headerlink" title="NumPy"></a>NumPy</h2><h3 id="1-1简介"><a href="#1-1简介" class="headerlink" title="1.1简介"></a>1.1简介</h3><blockquote><p>数据分析三剑客：Numpy，Pandas，Matplotlib<br>NumPy(Numerical Python) 是 Python 语言的一个扩展程序库，支持大量的维度数组与矩阵运算，此外也针对数组运算提供大量的数学函数库。<br>numpy是基于c语言开发，所以这使得numpy的运行速度很快，高效率运行就是numpy的一大优势。</p></blockquote><p>首先·我们要导入numpy包，一般我们都把它命名为np：</p><pre class=" language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token keyword">import</span> numpy <span class="token keyword">as</span> np </code></pre><p>接着就可以生成一个numpy一维数组：</p><pre class=" language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">:</span> a <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">,</span>dtype<span class="token operator">=</span>np<span class="token punctuation">.</span>int32<span class="token punctuation">)</span>In <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">:</span> aOut<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">:</span> array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span> </code></pre><p>numpy中定义的最重要的数据结构是称为ndarray的n维数组类型，这个结构引用了两个对象，一块用于保存数据的存储区域和一个用于描述元素类型的dtype对象：</p><p><img src="https://image.jiqizhixin.com/uploads/editor/2859576f-79a3-4eff-9990-4eb29ebc7a2a/20180516210240962.jpg" alt="ndarray"></p><h3 id="1-2-WHY"><a href="#1-2-WHY" class="headerlink" title="1.2 WHY?"></a>1.2 WHY?</h3><p>二维数组的生成在python中我们还可以用到<strong>list列表</strong>，如果用list来表示[1,2,3]，由于list中的元素可以是任何对象，所以list中保存的是对象的指针，如果要保存[1,2,3]就需要三个指针和三个整数对象，是比较浪费内存资源和cpu计算时间的，而ndarray是一种保存单一数据类型的多维数组结构，在数据处理上比list列表要快上很多，在这里我们可以用%timeit命令来检测两者的数据处理速度：</p><pre class=" language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">:</span> a <span class="token operator">=</span> range<span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span>In <span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token operator">%</span>timeit<span class="token punctuation">[</span>i<span class="token operator">**</span><span class="token number">2</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> a<span class="token punctuation">]</span><span class="token number">381</span> µs ± <span class="token number">6.1</span> µs per loop <span class="token punctuation">(</span>mean ± std<span class="token punctuation">.</span> dev<span class="token punctuation">.</span> of <span class="token number">7</span> runs<span class="token punctuation">,</span> <span class="token number">1000</span> loops each<span class="token punctuation">)</span>In <span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">]</span><span class="token punctuation">:</span> b <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span>In <span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token operator">%</span>timeit b<span class="token operator">**</span><span class="token number">2</span><span class="token number">1.41</span> µs ± <span class="token number">18</span> ns per loop <span class="token punctuation">(</span>mean ± std<span class="token punctuation">.</span> dev<span class="token punctuation">.</span> of <span class="token number">7</span> runs<span class="token punctuation">,</span> <span class="token number">1000000</span> loops each<span class="token punctuation">)</span> </code></pre><p>由于<strong>相同数据大小的array运算直接作用到元素级</strong>上这一numpy特性，结果显而易见，在数据处理上numpy数组比使用for循环的list列表快的不是一点两点。 </p><h3 id="1-3-常用操作"><a href="#1-3-常用操作" class="headerlink" title="1.3 常用操作"></a>1.3 常用操作</h3><p><strong>这里生成一个3×3的矩阵作为例子:</strong></p><pre class=" language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">:</span> data <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true"># 等价于data=np.arange(1，10).reshape(3,3)</span>In <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">:</span> dataOut<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">:</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span>       <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">,</span>       <span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span> </code></pre><p><strong>查看矩阵信息:</strong></p><pre class=" language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">:</span> data<span class="token punctuation">.</span>shape    <span class="token comment" spellcheck="true"># 返回元组，表示n行n列</span>Out<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span>In <span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">:</span> data<span class="token punctuation">.</span>dtype    <span class="token comment" spellcheck="true"># 返回数组数据类型</span>Out<span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">:</span> dtype<span class="token punctuation">(</span><span class="token string">'int32'</span><span class="token punctuation">)</span>In <span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">:</span> data<span class="token punctuation">.</span>ndim    <span class="token comment" spellcheck="true"># 返回是几维数组</span>Out<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token number">2</span></code></pre><p><strong>转换数据类型：</strong></p><pre class=" language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">]</span><span class="token punctuation">:</span> a <span class="token operator">=</span> data<span class="token punctuation">.</span>astype<span class="token punctuation">(</span>float<span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 拷贝一份新的数组</span>In <span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">]</span><span class="token punctuation">:</span> a<span class="token punctuation">.</span>dtypeOut<span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">]</span><span class="token punctuation">:</span> dtype<span class="token punctuation">(</span><span class="token string">'float64'</span><span class="token punctuation">)</span></code></pre><p>数组之间的计算：</p><pre class=" language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">15</span><span class="token punctuation">]</span><span class="token punctuation">:</span> data<span class="token operator">+</span>dataOut<span class="token punctuation">[</span><span class="token number">15</span><span class="token punctuation">]</span><span class="token punctuation">:</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token number">2</span><span class="token punctuation">,</span>  <span class="token number">4</span><span class="token punctuation">,</span>  <span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">,</span>       <span class="token punctuation">[</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">]</span><span class="token punctuation">,</span>       <span class="token punctuation">[</span><span class="token number">14</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>In <span class="token punctuation">[</span><span class="token number">16</span><span class="token punctuation">]</span><span class="token punctuation">:</span> data<span class="token operator">*</span>dataOut<span class="token punctuation">[</span><span class="token number">16</span><span class="token punctuation">]</span><span class="token punctuation">:</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token number">1</span><span class="token punctuation">,</span>  <span class="token number">4</span><span class="token punctuation">,</span>  <span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">,</span>       <span class="token punctuation">[</span><span class="token number">16</span><span class="token punctuation">,</span> <span class="token number">25</span><span class="token punctuation">,</span> <span class="token number">36</span><span class="token punctuation">]</span><span class="token punctuation">,</span>       <span class="token punctuation">[</span><span class="token number">49</span><span class="token punctuation">,</span> <span class="token number">64</span><span class="token punctuation">,</span> <span class="token number">81</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span></code></pre><p>可以看出相同规格的数组计算是直接作用在其元素级上的，那不同的规格的数组是否能进行运算呢，我们来看下这个例子</p><pre class=" language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">18</span><span class="token punctuation">]</span><span class="token punctuation">:</span> data1 <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">#生成一个2x2numpy数组</span>In <span class="token punctuation">[</span><span class="token number">19</span><span class="token punctuation">]</span><span class="token punctuation">:</span> data<span class="token operator">+</span>data1<span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span>ValueError                                Traceback <span class="token punctuation">(</span>most recent call last<span class="token punctuation">)</span><span class="token operator">&lt;</span>ipython<span class="token operator">-</span>input<span class="token number">-19</span><span class="token operator">-</span>f2592a975589<span class="token operator">></span> <span class="token keyword">in</span> <span class="token operator">&lt;</span>module<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">></span> <span class="token number">1</span> data<span class="token operator">+</span>data1ValueError<span class="token punctuation">:</span> operands could <span class="token operator">not</span> be broadcast together <span class="token keyword">with</span> shapes <span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span></code></pre><p>我们可以看出不同规格的数组一起计算的话是会报出<strong>广播错误</strong>的，那是不是可以下结论了，别急我们再来看下方两个特殊例子：</p><pre class=" language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">20</span><span class="token punctuation">]</span><span class="token punctuation">:</span> data2 <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>In <span class="token punctuation">[</span><span class="token number">21</span><span class="token punctuation">]</span><span class="token punctuation">:</span> data <span class="token operator">+</span> data2Out<span class="token punctuation">[</span><span class="token number">21</span><span class="token punctuation">]</span><span class="token punctuation">:</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token number">2</span><span class="token punctuation">,</span>  <span class="token number">4</span><span class="token punctuation">,</span>  <span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">,</span>       <span class="token punctuation">[</span> <span class="token number">5</span><span class="token punctuation">,</span>  <span class="token number">7</span><span class="token punctuation">,</span>  <span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">,</span>       <span class="token punctuation">[</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>In <span class="token punctuation">[</span><span class="token number">22</span><span class="token punctuation">]</span><span class="token punctuation">:</span> data3 <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>In <span class="token punctuation">[</span><span class="token number">23</span><span class="token punctuation">]</span><span class="token punctuation">:</span> data<span class="token operator">+</span>data3Out<span class="token punctuation">[</span><span class="token number">23</span><span class="token punctuation">]</span><span class="token punctuation">:</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token number">2</span><span class="token punctuation">,</span>  <span class="token number">3</span><span class="token punctuation">,</span>  <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">,</span>       <span class="token punctuation">[</span> <span class="token number">6</span><span class="token punctuation">,</span>  <span class="token number">7</span><span class="token punctuation">,</span>  <span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">,</span>       <span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span></code></pre><p>data2数组的列数量与data数组相等，data3数组的行数量与data数组相等，这两个numpy数组虽然规格与data数组不一样，但却依然可以与data数组进行运算。</p><p><strong>数组的切片：</strong></p><pre class=" language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">24</span><span class="token punctuation">]</span><span class="token punctuation">:</span> data<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">]</span>    <span class="token comment" spellcheck="true"># 沿着行(axis=0)进行索引</span>Out<span class="token punctuation">[</span><span class="token number">24</span><span class="token punctuation">]</span><span class="token punctuation">:</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span>       <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>In <span class="token punctuation">[</span><span class="token number">25</span><span class="token punctuation">]</span><span class="token punctuation">:</span> data<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">]</span>    <span class="token comment" spellcheck="true"># 先沿着行(axis=0)进行索引，再沿着列(axis=1)进行索引</span>Out<span class="token punctuation">[</span><span class="token number">25</span><span class="token punctuation">]</span><span class="token punctuation">:</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span>       <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>In <span class="token punctuation">[</span><span class="token number">26</span><span class="token punctuation">]</span><span class="token punctuation">:</span> data<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">]</span>    <span class="token comment" spellcheck="true"># 下标是从0开始</span>Out<span class="token punctuation">[</span><span class="token number">26</span><span class="token punctuation">]</span><span class="token punctuation">:</span> array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">)</span></code></pre><p>这里需要注意的是，<strong>切片操作是在原始数组上创建一个视图view，这只是访问数组数据的一种方式。 因此原始数组不会被复制到内存中</strong>，传递的是一个类似引用的东西，与上面的astype（）方法是两种不同的拷贝方式，这里我们来看一个例子：</p><pre class=" language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">32</span><span class="token punctuation">]</span><span class="token punctuation">:</span> a <span class="token operator">=</span> data<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>In <span class="token punctuation">[</span><span class="token number">33</span><span class="token punctuation">]</span><span class="token punctuation">:</span> aOut<span class="token punctuation">[</span><span class="token number">33</span><span class="token punctuation">]</span><span class="token punctuation">:</span> array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">)</span>In <span class="token punctuation">[</span><span class="token number">34</span><span class="token punctuation">]</span><span class="token punctuation">:</span> a<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span>In <span class="token punctuation">[</span><span class="token number">35</span><span class="token punctuation">]</span><span class="token punctuation">:</span> dataOut<span class="token punctuation">[</span><span class="token number">35</span><span class="token punctuation">]</span><span class="token punctuation">:</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span>       <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>       <span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span></code></pre><p>当切片对象a改变时，data的对应值也会跟着改变，这是在我们日常数据处理中有时会疏忽的一个点，最安全的复制方法是使用</p><p><strong>copy() 方法进行浅拷贝：</strong></p><pre class=" language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">36</span><span class="token punctuation">]</span><span class="token punctuation">:</span> a <span class="token operator">=</span> data<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>copy<span class="token punctuation">(</span><span class="token punctuation">)</span>In <span class="token punctuation">[</span><span class="token number">37</span><span class="token punctuation">]</span><span class="token punctuation">:</span> aOut<span class="token punctuation">[</span><span class="token number">37</span><span class="token punctuation">]</span><span class="token punctuation">:</span> array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>In <span class="token punctuation">[</span><span class="token number">38</span><span class="token punctuation">]</span><span class="token punctuation">:</span> a<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">9</span>In <span class="token punctuation">[</span><span class="token number">39</span><span class="token punctuation">]</span><span class="token punctuation">:</span> dataOut<span class="token punctuation">[</span><span class="token number">39</span><span class="token punctuation">]</span><span class="token punctuation">:</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span>       <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>       <span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span></code></pre><p><strong>数组的布尔索引：</strong></p><pre class=" language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">43</span><span class="token punctuation">]</span><span class="token punctuation">:</span> dataOut<span class="token punctuation">[</span><span class="token number">43</span><span class="token punctuation">]</span><span class="token punctuation">:</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span>       <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">,</span>       <span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>In <span class="token punctuation">[</span><span class="token number">44</span><span class="token punctuation">]</span><span class="token punctuation">:</span> data<span class="token operator">></span><span class="token number">3</span>Out<span class="token punctuation">[</span><span class="token number">44</span><span class="token punctuation">]</span><span class="token punctuation">:</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token boolean">False</span><span class="token punctuation">]</span><span class="token punctuation">,</span>       <span class="token punctuation">[</span> <span class="token boolean">True</span><span class="token punctuation">,</span>  <span class="token boolean">True</span><span class="token punctuation">,</span>  <span class="token boolean">True</span><span class="token punctuation">]</span><span class="token punctuation">,</span>       <span class="token punctuation">[</span> <span class="token boolean">True</span><span class="token punctuation">,</span>  <span class="token boolean">True</span><span class="token punctuation">,</span>  <span class="token boolean">True</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>In <span class="token punctuation">[</span><span class="token number">45</span><span class="token punctuation">]</span><span class="token punctuation">:</span> data<span class="token punctuation">[</span>data<span class="token operator">></span><span class="token number">3</span><span class="token punctuation">]</span>    <span class="token comment" spellcheck="true"># 找出大于3的元素</span>Out<span class="token punctuation">[</span><span class="token number">45</span><span class="token punctuation">]</span><span class="token punctuation">:</span> array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">)</span></code></pre><p><strong>数组的逻辑表达处理：</strong></p><pre class=" language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">46</span><span class="token punctuation">]</span><span class="token punctuation">:</span> np<span class="token punctuation">.</span>where<span class="token punctuation">(</span>data<span class="token operator">></span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 大于3的标记为1，小于等于3的标记为0</span>Out<span class="token punctuation">[</span><span class="token number">46</span><span class="token punctuation">]</span><span class="token punctuation">:</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>       <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>       <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span></code></pre><p><strong>数组的常用统计操作：</strong></p><pre class=" language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">47</span><span class="token punctuation">]</span><span class="token punctuation">:</span> data<span class="token punctuation">.</span>mean<span class="token punctuation">(</span>axis<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 沿着行(axis=0)进行索引，求出其平均值</span>Out<span class="token punctuation">[</span><span class="token number">47</span><span class="token punctuation">]</span><span class="token punctuation">:</span> array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">.</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">.</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">.</span><span class="token punctuation">]</span><span class="token punctuation">)</span>In <span class="token punctuation">[</span><span class="token number">49</span><span class="token punctuation">]</span><span class="token punctuation">:</span> data<span class="token punctuation">.</span>std<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 求出全部元素的方差</span>Out<span class="token punctuation">[</span><span class="token number">49</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token number">2.581988897471611</span>In <span class="token punctuation">[</span><span class="token number">50</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token punctuation">(</span>data<span class="token operator">></span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">.</span>sum<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 统计数组中元素大于3的个数</span>Out<span class="token punctuation">[</span><span class="token number">50</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token number">6</span>In <span class="token punctuation">[</span><span class="token number">51</span><span class="token punctuation">]</span><span class="token punctuation">:</span> data<span class="token punctuation">.</span>any<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 数组中是否存在一个或多个true</span>Out<span class="token punctuation">[</span><span class="token number">51</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token boolean">True</span>In <span class="token punctuation">[</span><span class="token number">52</span><span class="token punctuation">]</span><span class="token punctuation">:</span> data<span class="token punctuation">.</span>all<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 数组中是否全部数都是true</span>Out<span class="token punctuation">[</span><span class="token number">52</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token boolean">True</span>In <span class="token punctuation">[</span><span class="token number">53</span><span class="token punctuation">]</span><span class="token punctuation">:</span> data<span class="token punctuation">.</span>cumsum<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 沿着行(axis=0)进行索引，进行累加</span>Out<span class="token punctuation">[</span><span class="token number">53</span><span class="token punctuation">]</span><span class="token punctuation">:</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token number">1</span><span class="token punctuation">,</span>  <span class="token number">2</span><span class="token punctuation">,</span>  <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span>       <span class="token punctuation">[</span> <span class="token number">5</span><span class="token punctuation">,</span>  <span class="token number">7</span><span class="token punctuation">,</span>  <span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">,</span>       <span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">,</span> dtype<span class="token operator">=</span>int32<span class="token punctuation">)</span>In <span class="token punctuation">[</span><span class="token number">54</span><span class="token punctuation">]</span><span class="token punctuation">:</span> data<span class="token punctuation">.</span>cumprod<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 沿着列(axis=1)进行索引，进行累乘</span>Out<span class="token punctuation">[</span><span class="token number">54</span><span class="token punctuation">]</span><span class="token punctuation">:</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span>  <span class="token number">1</span><span class="token punctuation">,</span>   <span class="token number">2</span><span class="token punctuation">,</span>   <span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">,</span>       <span class="token punctuation">[</span>  <span class="token number">4</span><span class="token punctuation">,</span>  <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">120</span><span class="token punctuation">]</span><span class="token punctuation">,</span>       <span class="token punctuation">[</span>  <span class="token number">7</span><span class="token punctuation">,</span>  <span class="token number">56</span><span class="token punctuation">,</span> <span class="token number">504</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">,</span> dtype<span class="token operator">=</span>int32<span class="token punctuation">)</span></code></pre><p><strong>数组的排序操作：</strong></p><pre class=" language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">55</span><span class="token punctuation">]</span><span class="token punctuation">:</span> data<span class="token operator">=</span>np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>randn<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span>In <span class="token punctuation">[</span><span class="token number">56</span><span class="token punctuation">]</span><span class="token punctuation">:</span> dataOut<span class="token punctuation">[</span><span class="token number">56</span><span class="token punctuation">]</span><span class="token punctuation">:</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token number">1.58669867</span><span class="token punctuation">,</span>  <span class="token number">1.57692769</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1.85828013</span><span class="token punctuation">,</span>  <span class="token number">1.17201164</span><span class="token punctuation">]</span><span class="token punctuation">,</span>       <span class="token punctuation">[</span> <span class="token number">1.68160714</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">0.83957549</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">0.33771694</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">0.33782379</span><span class="token punctuation">]</span><span class="token punctuation">,</span>       <span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">0.03148106</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">0.97819034</span><span class="token punctuation">,</span>  <span class="token number">0.51126626</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">0.08184963</span><span class="token punctuation">]</span><span class="token punctuation">,</span>       <span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">0.02822319</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">0.31934723</span><span class="token punctuation">,</span>  <span class="token number">0.70764701</span><span class="token punctuation">,</span>  <span class="token number">0.80444954</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>In <span class="token punctuation">[</span><span class="token number">57</span><span class="token punctuation">]</span><span class="token punctuation">:</span> data<span class="token punctuation">.</span>sort<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 沿着行(axis=0)进行索引，并进行升序排序</span>In <span class="token punctuation">[</span><span class="token number">58</span><span class="token punctuation">]</span><span class="token punctuation">:</span> dataOut<span class="token punctuation">[</span><span class="token number">58</span><span class="token punctuation">]</span><span class="token punctuation">:</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">0.03148106</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">0.97819034</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1.85828013</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">0.33782379</span><span class="token punctuation">]</span><span class="token punctuation">,</span>       <span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">0.02822319</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">0.83957549</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">0.33771694</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">0.08184963</span><span class="token punctuation">]</span><span class="token punctuation">,</span>       <span class="token punctuation">[</span> <span class="token number">1.58669867</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">0.31934723</span><span class="token punctuation">,</span>  <span class="token number">0.51126626</span><span class="token punctuation">,</span>  <span class="token number">0.80444954</span><span class="token punctuation">]</span><span class="token punctuation">,</span>       <span class="token punctuation">[</span> <span class="token number">1.68160714</span><span class="token punctuation">,</span>  <span class="token number">1.57692769</span><span class="token punctuation">,</span>  <span class="token number">0.70764701</span><span class="token punctuation">,</span>  <span class="token number">1.17201164</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>In <span class="token punctuation">[</span><span class="token number">59</span><span class="token punctuation">]</span><span class="token punctuation">:</span> data<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>    <span class="token comment" spellcheck="true"># 降序操作</span>Out<span class="token punctuation">[</span><span class="token number">59</span><span class="token punctuation">]</span><span class="token punctuation">:</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token number">1.68160714</span><span class="token punctuation">,</span>  <span class="token number">1.57692769</span><span class="token punctuation">,</span>  <span class="token number">0.70764701</span><span class="token punctuation">,</span>  <span class="token number">1.17201164</span><span class="token punctuation">]</span><span class="token punctuation">,</span>       <span class="token punctuation">[</span> <span class="token number">1.58669867</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">0.31934723</span><span class="token punctuation">,</span>  <span class="token number">0.51126626</span><span class="token punctuation">,</span>  <span class="token number">0.80444954</span><span class="token punctuation">]</span><span class="token punctuation">,</span>       <span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">0.02822319</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">0.83957549</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">0.33771694</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">0.08184963</span><span class="token punctuation">]</span><span class="token punctuation">,</span>       <span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">0.03148106</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">0.97819034</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1.85828013</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">0.33782379</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span></code></pre><p><strong>注意:</strong> 直接调用数组的方法的排序将直接改变数组而不会产生新的拷贝。</p><p><strong>矩阵运算：</strong></p><pre class=" language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">62</span><span class="token punctuation">]</span><span class="token punctuation">:</span> x<span class="token operator">=</span>np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">)</span><span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span>In <span class="token punctuation">[</span><span class="token number">63</span><span class="token punctuation">]</span><span class="token punctuation">:</span> xOut<span class="token punctuation">[</span><span class="token number">63</span><span class="token punctuation">]</span><span class="token punctuation">:</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span>       <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">,</span>       <span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>In <span class="token punctuation">[</span><span class="token number">64</span><span class="token punctuation">]</span><span class="token punctuation">:</span> np<span class="token punctuation">.</span>dot<span class="token punctuation">(</span>x<span class="token punctuation">,</span>x<span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 矩阵相乘</span>Out<span class="token punctuation">[</span><span class="token number">64</span><span class="token punctuation">]</span><span class="token punctuation">:</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token number">15</span><span class="token punctuation">,</span>  <span class="token number">18</span><span class="token punctuation">,</span>  <span class="token number">21</span><span class="token punctuation">]</span><span class="token punctuation">,</span>       <span class="token punctuation">[</span> <span class="token number">42</span><span class="token punctuation">,</span>  <span class="token number">54</span><span class="token punctuation">,</span>  <span class="token number">66</span><span class="token punctuation">]</span><span class="token punctuation">,</span>       <span class="token punctuation">[</span> <span class="token number">69</span><span class="token punctuation">,</span>  <span class="token number">90</span><span class="token punctuation">,</span> <span class="token number">111</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>In <span class="token punctuation">[</span><span class="token number">65</span><span class="token punctuation">]</span><span class="token punctuation">:</span> x<span class="token punctuation">.</span>T    <span class="token comment" spellcheck="true"># 矩阵转置</span>Out<span class="token punctuation">[</span><span class="token number">65</span><span class="token punctuation">]</span><span class="token punctuation">:</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">,</span>       <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">,</span>       <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span></code></pre><p>在numpy中的linalg中有还有很多矩阵运算，比如svd分解，qr分解，cholesky分解等等。</p><p><strong>numpy数据的读取和保存：</strong></p><pre class=" language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">68</span><span class="token punctuation">]</span><span class="token punctuation">:</span> np<span class="token punctuation">.</span>save<span class="token punctuation">(</span><span class="token string">'name'</span><span class="token punctuation">,</span>data<span class="token punctuation">)</span>In <span class="token punctuation">[</span><span class="token number">69</span><span class="token punctuation">]</span><span class="token punctuation">:</span> np<span class="token punctuation">.</span>load<span class="token punctuation">(</span><span class="token string">'name.npy'</span><span class="token punctuation">)</span>Out<span class="token punctuation">[</span><span class="token number">69</span><span class="token punctuation">]</span><span class="token punctuation">:</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">0.03148106</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">0.97819034</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1.85828013</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">0.33782379</span><span class="token punctuation">]</span><span class="token punctuation">,</span>       <span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">0.02822319</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">0.83957549</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">0.33771694</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">0.08184963</span><span class="token punctuation">]</span><span class="token punctuation">,</span>       <span class="token punctuation">[</span> <span class="token number">1.58669867</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">0.31934723</span><span class="token punctuation">,</span>  <span class="token number">0.51126626</span><span class="token punctuation">,</span>  <span class="token number">0.80444954</span><span class="token punctuation">]</span><span class="token punctuation">,</span>       <span class="token punctuation">[</span> <span class="token number">1.68160714</span><span class="token punctuation">,</span>  <span class="token number">1.57692769</span><span class="token punctuation">,</span>  <span class="token number">0.70764701</span><span class="token punctuation">,</span>  <span class="token number">1.17201164</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Numpy </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Redis-Cluster</title>
      <link href="/2019/01/16/redis-cluster/"/>
      <url>/2019/01/16/redis-cluster/</url>
      
        <content type="html"><![CDATA[<h2 id="使用Redis-Cluster实现高并发"><a href="#使用Redis-Cluster实现高并发" class="headerlink" title="使用Redis-Cluster实现高并发"></a>使用Redis-Cluster实现高并发</h2><blockquote><p>redis官方生成可以达到 10万/每秒,每秒执行10万条命令<br>假如业务需要每秒100万的命令执行呢？</p></blockquote><h3 id="数据量太大"><a href="#数据量太大" class="headerlink" title="数据量太大"></a>数据量太大</h3><p>一台服务器内存正常是16~256G，假如你的业务需要500G内存，你怎么办？解决方案如下</p><ol><li>配置一个超级牛逼的计算机，超大内存，超强cpu，但是问题是。。。。</li></ol><p><img src="http://pythonav.cn/Chapter8/pic/s5.png" alt="翻车"></p><ol start="2"><li>正确的应该是考虑分布式，加机器，把数据分到不同的位置，分摊集中式的压力，一堆机器做一件事</li></ol><h3 id="客户端切片"><a href="#客户端切片" class="headerlink" title="客户端切片"></a>客户端切片</h3><p><img src="http://pythonav.cn/Chapter8/pic/s8.png" alt="数据分布"></p><blockquote><p>redis实例集群主要思想是将redis数据的key进行散列，通过hash函数特定的key会映射到指定的redis节点上</p></blockquote><h3 id="数据分布原理图"><a href="#数据分布原理图" class="headerlink" title="数据分布原理图"></a>数据分布原理图</h3><p>分布式数据库首要解决把整个数据集按照分区规则映射到多个节点的问题，即把数据集划分到多个节点上，每个节点负责整个数据的一个子集。</p><p>常见的分区规则有哈希分区和顺序分区。Redis Cluster采用哈希分区规则，因此接下来会讨论哈希分区规则。</p><ul><li>节点取余分区</li><li>一致性哈希分区</li><li><strong>虚拟槽分区(redis-cluster采用的方式)</strong></li></ul><h4 id="顺序分区"><a href="#顺序分区" class="headerlink" title="顺序分区"></a>顺序分区</h4><p><img src="http://pythonav.cn/Chapter8/pic/t1.png" alt="顺序分区"></p><h4 id="哈希分区"><a href="#哈希分区" class="headerlink" title="哈希分区"></a>哈希分区</h4><p><img src="http://pythonav.cn/Chapter8/pic/t2.png" alt="哈希区分"></p><p>例如按照节点取余的方式，分三个节点</p><p>1~100的数据对3取余，可以分为三类</p><ul><li>余数为0</li><li>余数为1</li><li>余数为2</li></ul><p>那么同样的分4个节点就是hash(key)%4</p><p>节点取余的优点是简单，客户端分片直接是哈希+取余</p><h4 id="虚拟槽分区"><a href="#虚拟槽分区" class="headerlink" title="虚拟槽分区"></a>虚拟槽分区</h4><blockquote><p>Redis Cluster采用虚拟槽分区</p></blockquote><p>虚拟槽分区巧妙地使用了哈希空间，使用分散度良好的哈希函数把所有的数据映射到一个固定范围内的整数集合，整数定义为槽（slot）。</p><p><strong>Redis Cluster槽的范围是0 ～ 16383。</strong></p><p><strong>槽是集群内数据管理和迁移的基本单位</strong>。采用大范围的槽的主要目的是为了方便数据的拆分和集群的扩展，</p><p><strong>每个节点负责一定数量的槽。</strong></p><p><img src="http://pythonav.cn/Chapter8/pic/t3.png" alt="虚拟槽分区"></p><h2 id="如何搭建redis-cluster"><a href="#如何搭建redis-cluster" class="headerlink" title="如何搭建redis-cluster"></a>如何搭建redis-cluster</h2><p>搭建集群分为几部</p><ul><li>准备节点（几匹马儿）</li><li>节点通信（几匹马儿分配主从）</li><li>分配槽位给节点（slot分配给马儿）</li></ul><p>redis-cluster集群架构</p><blockquote><p>多个服务端，负责读写，彼此通信，redis指定了16384个槽。<br>多匹马儿，负责运输数据，马儿分配16384个槽位，管理数据。<br>ruby的脚本自动就把分配槽位这事做了</p></blockquote><h3 id="安装方式"><a href="#安装方式" class="headerlink" title="安装方式"></a>安装方式</h3><p>官方提供通过ruby语言的脚本一键安装</p><h4 id="步骤一、通过配置，redis-conf开启redis-cluster"><a href="#步骤一、通过配置，redis-conf开启redis-cluster" class="headerlink" title="步骤一、通过配置，redis.conf开启redis-cluster"></a>步骤一、通过配置，redis.conf开启redis-cluster</h4><pre class=" language-python"><code class="language-python">port <span class="token number">7000</span>daemonize yesdir <span class="token string">"/opt/redis/data"</span>logfile <span class="token string">"7000.log"</span>dbfilename <span class="token string">"dump-7000.rdb"</span>cluster<span class="token operator">-</span>enabled yes   <span class="token comment" spellcheck="true">#开启集群模式</span>cluster<span class="token operator">-</span>config<span class="token operator">-</span>file nodes<span class="token number">-7000.</span>conf　　<span class="token comment" spellcheck="true">#集群内部的配置文件</span>cluster<span class="token operator">-</span>require<span class="token operator">-</span>full<span class="token operator">-</span>coverage no　　<span class="token comment" spellcheck="true">#redis cluster需要16384个slot都正常的时候才能对外提供服务，换句话说，只要任何一个slot异常那么整个cluster不对外提供服务。 因此生产环境一般为no</span></code></pre><p>redis支持多实例的功能，我们在单机演示集群搭建，需要6个实例，三个是主节点，三个是从节点，数量为6个节点才能保证高可用的集群。</p><p><strong>每个节点仅仅是端口运行的不同！</strong></p><pre class=" language-python"><code class="language-python"><span class="token punctuation">[</span>root@yugo <span class="token operator">/</span>opt<span class="token operator">/</span>redis<span class="token operator">/</span>config <span class="token number">17</span><span class="token punctuation">:</span><span class="token number">12</span><span class="token punctuation">:</span><span class="token number">30</span><span class="token punctuation">]</span><span class="token comment" spellcheck="true">#ls</span>redis<span class="token number">-7000.</span>conf  redis<span class="token number">-7002.</span>conf  redis<span class="token number">-7004.</span>confredis<span class="token number">-7001.</span>conf  redis<span class="token number">-7003.</span>conf  redis<span class="token number">-7005.</span>conf<span class="token comment" spellcheck="true">#确保每个配置文件中的端口修改！！</span></code></pre><h4 id="步骤二、运行redis实例"><a href="#步骤二、运行redis实例" class="headerlink" title="步骤二、运行redis实例"></a>步骤二、运行redis实例</h4><p>创建6个节点的redis实例</p><pre class=" language-python"><code class="language-python"><span class="token number">1855</span>  <span class="token number">2018</span><span class="token operator">-</span><span class="token number">10</span><span class="token operator">-</span><span class="token number">24</span> <span class="token number">15</span><span class="token punctuation">:</span><span class="token number">46</span><span class="token punctuation">:</span><span class="token number">01</span> redis<span class="token operator">-</span>server redis<span class="token number">-7000.</span>conf <span class="token number">1856</span>  <span class="token number">2018</span><span class="token operator">-</span><span class="token number">10</span><span class="token operator">-</span><span class="token number">24</span> <span class="token number">15</span><span class="token punctuation">:</span><span class="token number">46</span><span class="token punctuation">:</span><span class="token number">13</span> redis<span class="token operator">-</span>server redis<span class="token number">-7001.</span>conf <span class="token number">1857</span>  <span class="token number">2018</span><span class="token operator">-</span><span class="token number">10</span><span class="token operator">-</span><span class="token number">24</span> <span class="token number">15</span><span class="token punctuation">:</span><span class="token number">46</span><span class="token punctuation">:</span><span class="token number">16</span> redis<span class="token operator">-</span>server redis<span class="token number">-7002.</span>conf <span class="token number">1858</span>  <span class="token number">2018</span><span class="token operator">-</span><span class="token number">10</span><span class="token operator">-</span><span class="token number">24</span> <span class="token number">15</span><span class="token punctuation">:</span><span class="token number">46</span><span class="token punctuation">:</span><span class="token number">18</span> redis<span class="token operator">-</span>server redis<span class="token number">-7003.</span>conf <span class="token number">1859</span>  <span class="token number">2018</span><span class="token operator">-</span><span class="token number">10</span><span class="token operator">-</span><span class="token number">24</span> <span class="token number">15</span><span class="token punctuation">:</span><span class="token number">46</span><span class="token punctuation">:</span><span class="token number">20</span> redis<span class="token operator">-</span>server redis<span class="token number">-7004.</span>conf <span class="token number">1860</span>  <span class="token number">2018</span><span class="token operator">-</span><span class="token number">10</span><span class="token operator">-</span><span class="token number">24</span> <span class="token number">15</span><span class="token punctuation">:</span><span class="token number">46</span><span class="token punctuation">:</span><span class="token number">23</span> redis<span class="token operator">-</span>server redis<span class="token number">-7005.</span>conf</code></pre><pre class=" language-python"><code class="language-python">redis<span class="token operator">-</span>server redis<span class="token number">-7000.</span>confredis<span class="token operator">-</span>server redis<span class="token number">-7001.</span>confredis<span class="token operator">-</span>server redis<span class="token number">-7002.</span>confredis<span class="token operator">-</span>server redis<span class="token number">-7003.</span>confredis<span class="token operator">-</span>server redis<span class="token number">-7004.</span>confredis<span class="token operator">-</span>server redis<span class="token number">-7005.</span>conf</code></pre><h4 id="步骤三、开启redis-cluster"><a href="#步骤三、开启redis-cluster" class="headerlink" title="步骤三、开启redis-cluster"></a>步骤三、开启redis-cluster</h4><pre class=" language-python"><code class="language-python"><span class="token number">1</span><span class="token punctuation">.</span>下载、编译、安装Ruby<span class="token number">2</span><span class="token punctuation">.</span>安装rubygem redis<span class="token number">3</span><span class="token punctuation">.</span>安装redis<span class="token operator">-</span>trib<span class="token punctuation">.</span>rb命令</code></pre><p>第一步、安装ruby</p><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true">#下载ruby源码包</span>wget https<span class="token punctuation">:</span><span class="token operator">//</span>cache<span class="token punctuation">.</span>ruby<span class="token operator">-</span>lang<span class="token punctuation">.</span>org<span class="token operator">/</span>pub<span class="token operator">/</span>ruby<span class="token operator">/</span><span class="token number">2.3</span><span class="token operator">/</span>ruby<span class="token number">-2.3</span><span class="token punctuation">.</span><span class="token number">1.</span>tar<span class="token punctuation">.</span>gz<span class="token comment" spellcheck="true">#解压缩ruby源码包</span>tar <span class="token operator">-</span>zxvf ruby<span class="token number">-2.3</span><span class="token punctuation">.</span><span class="token number">1.</span>tar<span class="token punctuation">.</span>gz<span class="token comment" spellcheck="true">#编译且安装</span><span class="token punctuation">.</span><span class="token operator">/</span>configure <span class="token operator">-</span><span class="token operator">-</span>prefix<span class="token operator">=</span><span class="token operator">/</span>opt<span class="token operator">/</span>ruby<span class="token operator">/</span>make <span class="token operator">&amp;</span><span class="token operator">&amp;</span> make install</code></pre><p>第二步、配置ruby环境变量</p><pre class=" language-python"><code class="language-python">vim <span class="token operator">/</span>etc<span class="token operator">/</span>profile写入如下配置PATH<span class="token operator">=</span>$PATH<span class="token punctuation">:</span><span class="token operator">/</span>opt<span class="token operator">/</span>ruby<span class="token operator">/</span>bin</code></pre><p>第三步、安装ruby操作redis包</p><pre class=" language-python"><code class="language-python">wget http<span class="token punctuation">:</span><span class="token operator">//</span>rubygems<span class="token punctuation">.</span>org<span class="token operator">/</span>downloads<span class="token operator">/</span>redis<span class="token number">-3.3</span><span class="token punctuation">.</span><span class="token number">0.</span>gemgem install <span class="token operator">-</span>l redis<span class="token number">-3.3</span><span class="token punctuation">.</span><span class="token number">0.</span>gem</code></pre><p>第四部、安装redis-trib.rb命令</p><pre class=" language-python"><code class="language-python"><span class="token punctuation">[</span>root@yugo <span class="token operator">/</span>opt<span class="token operator">/</span>redis<span class="token operator">/</span>src <span class="token number">18</span><span class="token punctuation">:</span><span class="token number">38</span><span class="token punctuation">:</span><span class="token number">13</span><span class="token punctuation">]</span><span class="token comment" spellcheck="true">#cp /opt/redis/src/redis-trib.rb /usr/local/bin/</span></code></pre><h4 id="一键开启redis-cluster集群"><a href="#一键开启redis-cluster集群" class="headerlink" title="一键开启redis-cluster集群"></a>一键开启redis-cluster集群</h4><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true">#每个主节点，有一个从节点，代表--replicas 1</span>redis<span class="token operator">-</span>trib<span class="token punctuation">.</span>rb create <span class="token operator">-</span><span class="token operator">-</span>replicas <span class="token number">1</span> <span class="token number">127.0</span><span class="token punctuation">.</span><span class="token number">0.1</span><span class="token punctuation">:</span><span class="token number">7000</span> <span class="token number">127.0</span><span class="token punctuation">.</span><span class="token number">0.1</span><span class="token punctuation">:</span><span class="token number">7001</span> <span class="token number">127.0</span><span class="token punctuation">.</span><span class="token number">0.1</span><span class="token punctuation">:</span><span class="token number">7002</span> <span class="token number">127.0</span><span class="token punctuation">.</span><span class="token number">0.1</span><span class="token punctuation">:</span><span class="token number">7003</span> <span class="token number">127.0</span><span class="token punctuation">.</span><span class="token number">0.1</span><span class="token punctuation">:</span><span class="token number">7004</span> <span class="token number">127.0</span><span class="token punctuation">.</span><span class="token number">0.1</span><span class="token punctuation">:</span><span class="token number">7005</span><span class="token comment" spellcheck="true">#集群自动分配主从关系  7000、7001、7002为 7003、7004、7005 主动关系</span></code></pre><h4 id="查看集群状态"><a href="#查看集群状态" class="headerlink" title="查看集群状态"></a>查看集群状态</h4><pre class=" language-python"><code class="language-python">redis<span class="token operator">-</span>cli <span class="token operator">-</span>p <span class="token number">7000</span> cluster info  redis<span class="token operator">-</span>cli <span class="token operator">-</span>p <span class="token number">7000</span> cluster nodes  <span class="token comment" spellcheck="true">#等同于查看nodes-7000.conf文件节点信息</span>集群主节点状态redis<span class="token operator">-</span>cli <span class="token operator">-</span>p <span class="token number">7000</span> cluster nodes <span class="token operator">|</span> grep master集群从节点状态redis<span class="token operator">-</span>cli <span class="token operator">-</span>p <span class="token number">7000</span> cluster nodes <span class="token operator">|</span> grep slave</code></pre><h4 id="写入redis-cluster集群数据"><a href="#写入redis-cluster集群数据" class="headerlink" title="写入redis-cluster集群数据"></a>写入redis-cluster集群数据</h4><p>安装完毕后，检查集群状态</p><pre class=" language-python"><code class="language-python"><span class="token punctuation">[</span>root@yugo <span class="token operator">/</span>opt<span class="token operator">/</span>redis<span class="token operator">/</span>src <span class="token number">18</span><span class="token punctuation">:</span><span class="token number">42</span><span class="token punctuation">:</span><span class="token number">14</span><span class="token punctuation">]</span><span class="token comment" spellcheck="true">#redis-cli -p 7000 cluster info</span>cluster_state<span class="token punctuation">:</span>okcluster_slots_assigned<span class="token punctuation">:</span><span class="token number">16384</span>cluster_slots_ok<span class="token punctuation">:</span><span class="token number">16384</span>cluster_slots_pfail<span class="token punctuation">:</span><span class="token number">0</span>cluster_slots_fail<span class="token punctuation">:</span><span class="token number">0</span>cluster_known_nodes<span class="token punctuation">:</span><span class="token number">6</span>cluster_size<span class="token punctuation">:</span><span class="token number">3</span>cluster_current_epoch<span class="token punctuation">:</span><span class="token number">6</span>cluster_my_epoch<span class="token punctuation">:</span><span class="token number">1</span>cluster_stats_messages_ping_sent<span class="token punctuation">:</span><span class="token number">10468</span>cluster_stats_messages_pong_sent<span class="token punctuation">:</span><span class="token number">10558</span>cluster_stats_messages_sent<span class="token punctuation">:</span><span class="token number">21026</span>cluster_stats_messages_ping_received<span class="token punctuation">:</span><span class="token number">10553</span>cluster_stats_messages_pong_received<span class="token punctuation">:</span><span class="token number">10468</span>cluster_stats_messages_meet_received<span class="token punctuation">:</span><span class="token number">5</span>cluster_stats_messages_received<span class="token punctuation">:</span><span class="token number">21026</span></code></pre><p><strong>测试写入集群数据，登录集群必须使用redis-cli -c -p 7000必须加上-c参数</strong></p><pre class=" language-python"><code class="language-python"><span class="token number">127.0</span><span class="token punctuation">.</span><span class="token number">0.1</span><span class="token punctuation">:</span><span class="token number">7000</span><span class="token operator">></span> set name chao     <span class="token operator">-</span><span class="token operator">></span> Redirected to slot <span class="token punctuation">[</span><span class="token number">5798</span><span class="token punctuation">]</span> located at <span class="token number">127.0</span><span class="token punctuation">.</span><span class="token number">0.1</span><span class="token punctuation">:</span><span class="token number">7001</span>       OK<span class="token number">127.0</span><span class="token punctuation">.</span><span class="token number">0.1</span><span class="token punctuation">:</span><span class="token number">7001</span><span class="token operator">></span> exit<span class="token punctuation">[</span>root@yugo <span class="token operator">/</span>opt<span class="token operator">/</span>redis<span class="token operator">/</span>src <span class="token number">18</span><span class="token punctuation">:</span><span class="token number">46</span><span class="token punctuation">:</span><span class="token number">07</span><span class="token punctuation">]</span><span class="token comment" spellcheck="true">#redis-cli -c -p 7000</span><span class="token number">127.0</span><span class="token punctuation">.</span><span class="token number">0.1</span><span class="token punctuation">:</span><span class="token number">7000</span><span class="token operator">></span> pingPONG<span class="token number">127.0</span><span class="token punctuation">.</span><span class="token number">0.1</span><span class="token punctuation">:</span><span class="token number">7000</span><span class="token operator">></span> keys <span class="token operator">*</span><span class="token punctuation">(</span>empty list <span class="token operator">or</span> set<span class="token punctuation">)</span><span class="token number">127.0</span><span class="token punctuation">.</span><span class="token number">0.1</span><span class="token punctuation">:</span><span class="token number">7000</span><span class="token operator">></span> get name<span class="token operator">-</span><span class="token operator">></span> Redirected to slot <span class="token punctuation">[</span><span class="token number">5798</span><span class="token punctuation">]</span> located at <span class="token number">127.0</span><span class="token punctuation">.</span><span class="token number">0.1</span><span class="token punctuation">:</span><span class="token number">7001</span><span class="token string">"chao"</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> redis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL主从复制</title>
      <link href="/2019/01/15/mysql-zhu-cong-fu-zhi/"/>
      <url>/2019/01/15/mysql-zhu-cong-fu-zhi/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>MySQL数据库的主从复制方案，是其自带的功能，并且主从复制并不是复制磁盘上的数据库文件，而是通过binlog日志复制到需要同步的从服务器上。</p><p>MySQL数据库支持单向、双向、链式级联，等不同业务场景的复制。在复制的过程中，一台服务器充当主服务器（Master），接收来自用户的内容更新，而一个或多个其他的服务器充当从服务器（slave），接收来自Master上binlog文件的日志内容，解析出SQL，重新更新到Slave，使得主从服务器数据达到一致。</p><h2 id="主从复制使用逻辑"><a href="#主从复制使用逻辑" class="headerlink" title="主从复制使用逻辑"></a>主从复制使用逻辑</h2><ul><li>一主一从</li><li>一主多从</li></ul><p><img src="http://pythonav.cn/Chapter7/pic/m2.png" alt="主从复制逻辑图"></p><p><strong>应用场景</strong></p><blockquote><p>利用复制功能当Master服务器出现问题时，我们可以人工的切换到从服务器继续提供服务，此时服务器的数据和宕机时的数据几乎完全一致。<br>复制功能也可用作数据备份，但是如果人为的执行drop,delete等语句删除，那么从库的备份功能也就失效了.</p></blockquote><h2 id="主从复制原理图"><a href="#主从复制原理图" class="headerlink" title="主从复制原理图"></a>主从复制原理图</h2><p><img src="http://pythonav.cn/Chapter7/pic/m3.png" alt="主从复制原理图"></p><ol><li>master将改变记录到二进制日志(binary log)中（这些记录叫做二进制日志事件，binary log events）； </li><li>slave将master的binary log events拷贝到它的中继日志(relay log)； </li><li>slave重做中继日志中的事件，将改变反映它自己的数据。</li></ol><h3 id="步骤1-配置master主库"><a href="#步骤1-配置master主库" class="headerlink" title="步骤1 配置master主库"></a>步骤1 配置master主库</h3><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true">#查看数据库状态</span>systemctl status mariadb<span class="token comment" spellcheck="true">#停mariadb</span>systemctl stop mariadb<span class="token comment" spellcheck="true">#修改配置文件</span>vim <span class="token operator">/</span>etc<span class="token operator">/</span>my<span class="token punctuation">.</span>cnf<span class="token comment" spellcheck="true">#修改内容</span><span class="token comment" spellcheck="true">#解释：server-id服务的唯一标识（主从之间都必须不同）；log-bin启动二进制日志名称为mysql-bin </span>　　<span class="token punctuation">[</span>mysqld<span class="token punctuation">]</span>　　server<span class="token operator">-</span>id<span class="token operator">=</span><span class="token number">1</span>　　log<span class="token operator">-</span>bin<span class="token operator">=</span>mysql<span class="token operator">-</span>bin<span class="token comment" spellcheck="true">#重启mariadb</span>systemctl start mariadb</code></pre><h3 id="步骤2-在master主库添加进行同步的用户"><a href="#步骤2-在master主库添加进行同步的用户" class="headerlink" title="步骤2 在master主库添加进行同步的用户"></a>步骤2 在master主库添加进行同步的用户</h3><pre class=" language-python"><code class="language-python"><span class="token number">1</span><span class="token punctuation">.</span>新建用于主从同步的用户username<span class="token punctuation">,</span>允许登录的从库是<span class="token string">'%'</span>create user <span class="token string">'username'</span>@<span class="token string">'%'</span> identified by <span class="token string">'password'</span><span class="token punctuation">;</span><span class="token number">2</span><span class="token punctuation">.</span><span class="token comment" spellcheck="true">#题外话：如果提示密码太简单不复合策略加在前面加这句</span>mysql<span class="token operator">></span> set <span class="token keyword">global</span> validate_password_policy<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token number">3</span><span class="token punctuation">.</span>给从库账号授权<span class="token punctuation">,</span>说明给username从库复制的权限，在<span class="token string">"%"</span>机器上复制grant replication slave on <span class="token operator">*</span><span class="token punctuation">.</span><span class="token operator">*</span> to <span class="token string">'username'</span>@<span class="token string">'%'</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">#检查主库创建的复制账号</span>select user<span class="token punctuation">,</span>host <span class="token keyword">from</span> mysql<span class="token punctuation">.</span>user<span class="token punctuation">;</span><span class="token comment" spellcheck="true">#检查授权账号的权限</span>show grants <span class="token keyword">for</span> username@<span class="token string">'%'</span><span class="token punctuation">;</span>实现对主数据库锁表只读，防止数据写入，数据复制失败flush table <span class="token keyword">with</span> read lock<span class="token punctuation">;</span><span class="token number">4</span><span class="token punctuation">.</span>检查主库的状态MariaDB <span class="token punctuation">[</span><span class="token punctuation">(</span>none<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token operator">></span> show master status<span class="token operator">-</span><span class="token operator">></span> <span class="token punctuation">;</span><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">|</span> File <span class="token operator">|</span> Position <span class="token operator">|</span> Binlog_Do_DB <span class="token operator">|</span> Binlog_Ignore_DB <span class="token operator">|</span><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">|</span> mysql<span class="token operator">-</span>bin<span class="token number">.000001</span> <span class="token operator">|</span> <span class="token number">575</span> <span class="token operator">|</span> <span class="token operator">|</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">+</span><span class="token number">1</span> row <span class="token keyword">in</span> set <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>File是二进制日志文件名，Position 是日志开始的位置。后面从库会用到 后面从库会用到 后面从库会用到！！！！！！<span class="token number">5</span><span class="token punctuation">.</span>锁表后，一定要单独再打开一个SSH窗口，导出数据库的所有数据，<span class="token punctuation">[</span>root@oldboy_python <span class="token operator">~</span> <span class="token number">19</span><span class="token punctuation">:</span><span class="token number">32</span><span class="token punctuation">:</span><span class="token number">45</span><span class="token punctuation">]</span><span class="token comment" spellcheck="true">#mysqldump -uroot -p --all-databases > /data/all.sql </span><span class="token number">6</span><span class="token punctuation">.</span>确保数据导出后，没有数据插入，完毕再查看主库状态show master status<span class="token punctuation">;</span><span class="token number">7</span><span class="token punctuation">.</span>导出数据完毕后，解锁主库，恢复可写；unlock tables<span class="token punctuation">;</span><span class="token number">8</span><span class="token punctuation">.</span>将备份导出的数据scp至Slave数据库scp <span class="token operator">/</span>data<span class="token operator">/</span>all<span class="token punctuation">.</span>sql root@ip<span class="token punctuation">:</span><span class="token operator">/</span>data<span class="token operator">/</span></code></pre><h3 id="步骤3-配置salve从库机器"><a href="#步骤3-配置salve从库机器" class="headerlink" title="步骤3 配置salve从库机器"></a>步骤3 配置salve从库机器</h3><pre class=" language-python"><code class="language-python"><span class="token number">1</span><span class="token punctuation">.</span>设置server<span class="token operator">-</span>id值并关闭binlog功能参数数据库的server<span class="token operator">-</span>id在主从复制体系内是唯一的，Slave的server<span class="token operator">-</span>id要与主库和其他从库不同，并且注释掉Slave的binlog参数。<span class="token number">2</span><span class="token punctuation">.</span>因此修改Slave的<span class="token operator">/</span>etc<span class="token operator">/</span>my<span class="token punctuation">.</span>cnf，写入<span class="token punctuation">[</span>mysqld<span class="token punctuation">]</span>server<span class="token operator">-</span>id<span class="token operator">=</span><span class="token number">3</span><span class="token number">3</span><span class="token punctuation">.</span>重启数据库systemctl restart mariadb<span class="token number">4</span><span class="token punctuation">.</span>检查Slava从数据库的各项参数show variables like <span class="token string">'log_bin'</span><span class="token punctuation">;</span>show variables like <span class="token string">'server_id'</span><span class="token punctuation">;</span><span class="token number">5</span><span class="token punctuation">.</span>恢复主库Master的数据导入到Slave库导入数据（注意sql文件的路径）mysql<span class="token operator">></span>source <span class="token operator">/</span>data<span class="token operator">/</span>all<span class="token punctuation">.</span>sql<span class="token punctuation">;</span>方法二：<span class="token comment" spellcheck="true">#mysql -uroot -p  &lt; abc.sql </span><span class="token number">6</span><span class="token punctuation">.</span>配置复制的参数，Slave从库连接Master主库的配置mysql <span class="token operator">></span> change master to master_host<span class="token operator">=</span><span class="token string">'x.x.x.x'</span><span class="token punctuation">,</span>master_user<span class="token operator">=</span><span class="token string">'username'</span><span class="token punctuation">,</span>master_password<span class="token operator">=</span><span class="token string">'password'</span><span class="token punctuation">,</span>master_log_file<span class="token operator">=</span><span class="token string">'mysql-bin.000001'</span><span class="token punctuation">,</span>master_log_pos<span class="token operator">=</span><span class="token number">575</span><span class="token punctuation">;</span><span class="token number">7</span><span class="token punctuation">.</span>启动从库的同步开关，测试主从复制的情况start slave<span class="token punctuation">;</span><span class="token number">8</span><span class="token punctuation">.</span>查看复制状态show slave status\G<span class="token punctuation">;</span></code></pre><h3 id="步骤4-检测主从复制状态关键点"><a href="#步骤4-检测主从复制状态关键点" class="headerlink" title="步骤4 检测主从复制状态关键点"></a>步骤4 检测主从复制状态关键点</h3><pre class=" language-python"><code class="language-python">MariaDB <span class="token punctuation">[</span><span class="token punctuation">(</span>none<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token operator">></span> show slave status\G<span class="token operator">**</span><span class="token operator">**</span><span class="token operator">**</span><span class="token operator">**</span><span class="token operator">**</span><span class="token operator">**</span><span class="token operator">**</span><span class="token operator">**</span><span class="token operator">**</span><span class="token operator">**</span><span class="token operator">**</span><span class="token operator">**</span><span class="token operator">**</span><span class="token operator">*</span> <span class="token number">1</span><span class="token punctuation">.</span> row <span class="token operator">**</span><span class="token operator">**</span><span class="token operator">**</span><span class="token operator">**</span><span class="token operator">**</span><span class="token operator">**</span><span class="token operator">**</span><span class="token operator">**</span><span class="token operator">**</span><span class="token operator">**</span><span class="token operator">**</span><span class="token operator">**</span><span class="token operator">**</span><span class="token operator">*</span>               Slave_IO_State<span class="token punctuation">:</span> Waiting <span class="token keyword">for</span> master to send event                  Master_Host<span class="token punctuation">:</span> <span class="token number">192.168</span><span class="token punctuation">.</span><span class="token number">119.10</span>                  Master_User<span class="token punctuation">:</span> chaoge                  Master_Port<span class="token punctuation">:</span> <span class="token number">3306</span>                Connect_Retry<span class="token punctuation">:</span> <span class="token number">60</span>              Master_Log_File<span class="token punctuation">:</span> mysql<span class="token operator">-</span>bin<span class="token number">.000001</span>          Read_Master_Log_Pos<span class="token punctuation">:</span> <span class="token number">1039</span>               Relay_Log_File<span class="token punctuation">:</span> slave<span class="token operator">-</span>relay<span class="token operator">-</span>bin<span class="token number">.000002</span>                Relay_Log_Pos<span class="token punctuation">:</span> <span class="token number">537</span>        Relay_Master_Log_File<span class="token punctuation">:</span> mysql<span class="token operator">-</span>bin<span class="token number">.000001</span>             Slave_IO_Running<span class="token punctuation">:</span> Yes            Slave_SQL_Running<span class="token punctuation">:</span> Yes</code></pre><p><strong>tip</strong></p><p>注意此处还未配置从库的只读模式，只需在slave服务器上配置/etc/my.cnf，加上以下配置，并且在slave上创建普通用户，使用普通用户主从同步即可达到只读的效果</p><p>如果用root用户，无法达到readonly，这<code>是一个坑</code></p><pre class=" language-python"><code class="language-python"><span class="token punctuation">[</span>mysqld<span class="token punctuation">]</span>character<span class="token operator">-</span>set<span class="token operator">-</span>server<span class="token operator">=</span>utf8collation<span class="token operator">-</span>server<span class="token operator">=</span>utf8_general_cilog<span class="token operator">-</span>error<span class="token operator">=</span><span class="token operator">/</span>var<span class="token operator">/</span>log<span class="token operator">/</span>mysqld<span class="token punctuation">.</span>logserver<span class="token operator">-</span>id<span class="token operator">=</span><span class="token number">3</span>read<span class="token operator">-</span>only<span class="token operator">=</span>true<span class="token punctuation">[</span>client<span class="token punctuation">]</span>default<span class="token operator">-</span>character<span class="token operator">-</span>set<span class="token operator">=</span>utf8<span class="token punctuation">[</span>mysql<span class="token punctuation">]</span>default<span class="token operator">-</span>character<span class="token operator">-</span>set<span class="token operator">=</span>utf8</code></pre>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown语法说明</title>
      <link href="/2019/01/14/markdown-yu-fa-shuo-ming/"/>
      <url>/2019/01/14/markdown-yu-fa-shuo-ming/</url>
      
        <content type="html"><![CDATA[<p><strong>NOTE:</strong> This is Simplelified Chinese Edition Document of Markdown Syntax. If you are seeking for English Edition Document. Please refer to Markdown: Syntax.</p><p><strong>声明:</strong> 这份文档派生(fork)于<a href="https://markdown.tw/" target="_blank" rel="noopener">繁体中文版</a>，在此基础上进行了繁体转简体工作，并进行了适当的润色。此文档用 Markdown 语法编写，你可以到这里<a href="https://dnspod.qcloud.com/static/block.html?d=gitcafe.com" target="_blank" rel="noopener">查看它的源文件</a>。「繁体中文版的原始文件可以<a href="https://github.com/othree/markdown-syntax-zhtw/blob/master/syntax.md" target="_blank" rel="noopener">查看这里</a> 。」–By @<a href="http://twitter.com/riku" target="_blank" rel="noopener">riku</a></p><h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><hr><h3 id="宗旨"><a href="#宗旨" class="headerlink" title="宗旨"></a><span id="id2">宗旨</span></h3><p>&emsp;&emsp;Markdown 的目标是实现「易读易写」。</p><p>可读性，无论如何，都是最重要的。一份使用 Markdown 格式撰写的文件应该可以直接以纯文本发布，并且看起来不会像是由许多标签或是格式指令所构成。Markdown 语法受到一些既有 text-to-HTML 格式的影响，包括 Setext、atx、Textile、reStructuredText、Grutatext 和 EtText，而最大灵感来源其实是纯文本电子邮件的格式</p><p>总之， Markdown 的语法全由一些符号所组成，这些符号经过精挑细选，其作用一目了然。比如：在文字两旁加上星号，看起来就像<em>强调</em>。Markdown 的列表看起来，嗯，就是列表。Markdown 的区块引用看起来就真的像是引用一段文字，就像你曾在电子邮件中见过的那样。</p><h3 id="兼容HTML"><a href="#兼容HTML" class="headerlink" title="兼容HTML"></a>兼容HTML</h3><p>&emsp;&emsp;Markdown 语法的目标是：成为一种适用于网络的书写语言。</p><p>Markdown 并不是想取代 HTML的地位，甚至接近它。它的语法种类很少，只对应 HTML 标记的一小部分。Markdown 的构想不是要使得 HTML 文档更容易书写。在我看来， HTML 已经很容易写了。Markdown 的理念是，能让文档更容易读、写和随意改。HTML 是一种发布的格式，Markdown 是一种书写的格式。就这样，Markdown 的格式语法只涵盖纯文本可以涵盖的范围。</p><p>不在 Markdown 涵盖范围之内的标签，都可以直接在文档里面用 HTML 撰写。不需要额外标注这是 HTML 或是 Markdown；只要直接加标签就可以了。</p><p>要制约的只有一些 HTML <code>区块元素</code>――比如 div、table、pre、<em><p></p></em> 等标签，必须在前后加上空行与其它内容区隔开，还要求它们的开始标签与结尾标签不能用制表符或空格来缩进。Markdown 的生成器有足够智能，不会在 HTML 区块标签外加上不必要的 </p><p> 标签。</p><p>请注意，在 HTML 区块标签间的 Markdown 格式语法将不会被处理。比如，你在 HTML 区块内使用 Markdown 样式的<em>强调</em>会没有效果。</p><p>和处在 HTML 区块标签间不同，Markdown 语法在 HTML 区段标签间是有效的。</p><h3 id="特殊文字自动转换"><a href="#特殊文字自动转换" class="headerlink" title="特殊文字自动转换"></a>特殊文字自动转换</h3><p>在 HTML 文件中，有两个字符需要特殊处理： &lt; 和 &amp; 。 &lt; 符号用于起始标签，&amp; 符号则用于标记 HTML 实体，如果你只是想要显示这些字符的原型，你必须要使用实体的形式，像是 &lt; 和 &amp;。</p><p>&amp; 字符尤其让网络文档编写者受折磨，如果你要打「AT&amp;T」 ，你必须要写成「AT&amp;T」。而网址中的 &amp; 字符也要转换。</p><p>Markdown 让你可以自然地书写字符，需要转换的由它来处理好了。如果你使用的 &amp; 字符是 HTML 字符实体的一部分，它会保留原状，否则它会被转换成 &amp;。</p><p>所以你如果要在文档中插入一个版权符号 ©</p><p>需要注意的是，code 范围内，不论是行内还是区块， &lt; 和 &amp; 两个符号都一定会被转换成 HTML 实体，这项特性让你可以很容易地用 Markdown 写 HTML code （和 HTML 相对而言， HTML 语法中，你要把所有的 &lt; 和 &amp; 都转换为 HTML 实体，才能在 HTML 文件里面写出 HTML code。）</p><h2 id="区块元素"><a href="#区块元素" class="headerlink" title="区块元素"></a>区块元素</h2><hr><h3 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h3><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true">#   一级标题</span><span class="token comment" spellcheck="true">##</span><span class="token comment" spellcheck="true">###</span><span class="token comment" spellcheck="true">####</span><span class="token comment" spellcheck="true">#####</span><span class="token comment" spellcheck="true">######  六级标题</span></code></pre><h3 id="区块和引用"><a href="#区块和引用" class="headerlink" title="区块和引用"></a>区块和引用</h3><pre class=" language-python"><code class="language-python"><span class="token operator">></span> 引用内容<span class="token operator">></span> 引用内容<span class="token operator">></span> 引用的文字引用的文字引用的文字引用的文字引用的文字 <span class="token operator">>></span> 引言内的引言引言内的引言引言内的引言<span class="token operator">></span> 引用的文字引用的文字引用的文字引用的文字引用的文字</code></pre><h3 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h3><pre class=" language-python"><code class="language-python"><span class="token operator">-</span> 无序列表项目<span class="token operator">-</span> 无序列表项目<span class="token operator">-</span> 无序列表项目<span class="token number">1</span><span class="token punctuation">.</span> 有序列表项目<span class="token number">2</span><span class="token punctuation">.</span> 有序列表项目<span class="token number">3</span><span class="token punctuation">.</span> 有序列表项目<span class="token operator">-</span> 外层列表项目 <span class="token operator">+</span> 内层列表项目 <span class="token operator">+</span> 内层列表项目 <span class="token operator">+</span> 内层列表项目<span class="token operator">-</span> 外层列表项目</code></pre><h3 id="代码区块"><a href="#代码区块" class="headerlink" title="代码区块"></a>代码区块</h3><pre class=" language-python"><code class="language-python">使用三个反引号可表示代码块    三点包裹 代码语言</code></pre><h3 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h3><pre class=" language-python"><code class="language-python"><span class="token operator">**</span><span class="token operator">*</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span></code></pre><h2 id="区段元素"><a href="#区段元素" class="headerlink" title="区段元素"></a>区段元素</h2><hr><h3 id="超链接"><a href="#超链接" class="headerlink" title="超链接"></a><span id="id3">超链接</span></h3><p>this is <a href="https://baidu.com" target="_blank" rel="noopener">百度</a> inline link<br><a href="https://www.alibabagroup.com" target="_blank" rel="noopener">阿里巴巴</a><br><a href="https://https://jiesanc.github.io/" title="欢迎您的到来" target="_blank" rel="noopener">我的博客</a></p><pre class=" language-python"><code class="language-python">this <span class="token keyword">is</span> <span class="token punctuation">[</span>百度<span class="token punctuation">]</span><span class="token punctuation">(</span>https<span class="token punctuation">:</span><span class="token operator">//</span>baidu<span class="token punctuation">.</span>com<span class="token punctuation">)</span> inline link<span class="token punctuation">[</span>阿里巴巴<span class="token punctuation">]</span><span class="token punctuation">(</span>https<span class="token punctuation">:</span><span class="token operator">//</span>www<span class="token punctuation">.</span>alibabagroup<span class="token punctuation">.</span>com<span class="token punctuation">)</span><span class="token punctuation">[</span>我的博客<span class="token punctuation">]</span><span class="token punctuation">(</span>https<span class="token punctuation">:</span><span class="token operator">//</span>https<span class="token punctuation">:</span><span class="token operator">//</span>jiesanc<span class="token punctuation">.</span>github<span class="token punctuation">.</span>io<span class="token operator">/</span> <span class="token string">"欢迎您的到来"</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 注意:最后面的title一定要用引号引起来</span></code></pre><h3 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h3><p><img src="https://jiesanc.github.io/medias/featureimages/20.jpg" alt="加载失败显示的文字" title="你好啊朋友"></p><pre class=" language-python"><code class="language-python">!<span class="token punctuation">[</span>加载失败显示的文字<span class="token punctuation">]</span><span class="token punctuation">(</span>https<span class="token punctuation">:</span><span class="token operator">//</span>jiesanc<span class="token punctuation">.</span>github<span class="token punctuation">.</span>io<span class="token operator">/</span>medias<span class="token operator">/</span>featureimages<span class="token operator">/</span><span class="token number">20.</span>jpg <span class="token string">"你好啊朋友"</span><span class="token punctuation">)</span></code></pre><h3 id="锚点"><a href="#锚点" class="headerlink" title="锚点"></a>锚点</h3><p><a href="#id2">跳转到宗旨</a><br><a href="#id3">跳转到超链接</a></p><pre class=" language-python"><code class="language-python"><span class="token operator">&lt;</span>span id<span class="token operator">=</span><span class="token string">"jump"</span><span class="token operator">></span>跳转到的位置<span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span><span class="token punctuation">[</span>说明文字<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token comment" spellcheck="true">#jump)</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nginx的使用笔记</title>
      <link href="/2019/01/14/nginx-de-shi-yong-bi-ji/"/>
      <url>/2019/01/14/nginx-de-shi-yong-bi-ji/</url>
      
        <content type="html"><![CDATA[<h2 id="Nginx功能概述"><a href="#Nginx功能概述" class="headerlink" title="Nginx功能概述"></a>Nginx功能概述</h2><ol><li>这是第一个列表项</li><li>这是第二个列表项</li></ol><ul><li>red</li><li>green</li><li>blue   </li></ul><p>比如：在文字两旁加上星号，看起来就像<em>强调</em></p><table><br>    <tr><br>        <td>Foo</td><br>    </tr><br></table><h2 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h2><p>软件也像人一样，具有生命力，从出生到死亡，会经历多种变化。软件架构设计也不是一蹴而就的，是不断地演进发展。每个程序员都可以从理解编程原则和模式中受益。</p><p>软件设计原则是一组帮助我们避开不良设计的指导方针。根据Robert Martin的理论，应该避免不良设计的以下三个重要特点：</p><ul><li>很难做改动，因为每一个细微的改动都会影响到系统大量的其他功能</li><li>每当你做一次改动，总会引起系统中预期之外的部分出现故障</li><li>代码很难在其他应用中重用，因其不能从当前应用中单独抽离出来</li></ul><ul><li><p>在列表内部生成代码块</p><pre class=" language-python"><code class="language-python">  <span class="token keyword">from</span> copy <span class="token keyword">import</span> deepcopy<span class="token punctuation">,</span>copy  l <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">]</span>  l1 <span class="token operator">=</span> l             <span class="token comment" spellcheck="true"># 引用,</span>  l2 <span class="token operator">=</span> l<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">]</span>         <span class="token comment" spellcheck="true"># 相当于浅copy</span>  l3 <span class="token operator">=</span> l<span class="token punctuation">.</span>copy<span class="token punctuation">(</span><span class="token punctuation">)</span>      <span class="token comment" spellcheck="true"># 浅copy</span>  l4 <span class="token operator">=</span> copy<span class="token punctuation">(</span>l<span class="token punctuation">)</span>  l5 <span class="token operator">=</span> deepcopy<span class="token punctuation">(</span>l<span class="token punctuation">)</span>   <span class="token comment" spellcheck="true"># 深copy</span>  <span class="token keyword">print</span><span class="token punctuation">(</span>l3<span class="token punctuation">)</span></code></pre><p>普通代码块</p><p>  from copy import deepcopy,copy<br>  l = [1, [1, 2, 3], [4, 5, 6]]</p><p>  l1 = l             # 引用,<br>  l2 = l[:2]         # 相当于浅copy<br>  l3 = l.copy()      # 浅copy<br>  l4 = copy(l)<br>  l5 = deepcopy(l)   # 深copy<br>  print(l3)</p></li></ul><p>常用引用</p><blockquote><p>文本引用内容内容</p></blockquote><pre><code>  结束引用,空一行</code></pre>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue文档风格的Typora主题</title>
      <link href="/2019/01/05/vue-wen-dang-feng-ge-de-typora-zhu-ti/"/>
      <url>/2019/01/05/vue-wen-dang-feng-ge-de-typora-zhu-ti/</url>
      
        <content type="html"><![CDATA[<h3 id="This-is-Vue"><a href="#This-is-Vue" class="headerlink" title="This is Vue"></a>This is Vue</h3>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Markdown </tag>
            
            <tag> Typora </tag>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2019/01/04/hello-world/"/>
      <url>/2019/01/04/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class=" language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class=" language-bash"><code class="language-bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class=" language-bash"><code class="language-bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class=" language-bash"><code class="language-bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
